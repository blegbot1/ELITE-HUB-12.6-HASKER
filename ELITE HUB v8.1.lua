local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

-- –ö–∞—Å—Ç–æ–º–Ω–∞—è —Ñ–∏–æ–ª–µ—Ç–æ–≤–∞—è —Ç–µ–º–∞
local ThemeColors = {
    Main = Color3.fromRGB(30, 20, 50),
    Secondary = Color3.fromRGB(50, 35, 80),
    Accent = Color3.fromRGB(170, 0, 255),
    Text = Color3.fromRGB(240, 240, 240)
}

-- –°–æ–∑–¥–∞–Ω–∏–µ –æ–∫–Ω–∞ —Å –Ω–æ–≤–æ–π —Ç–µ–º–æ–π
local Window = Rayfield:CreateWindow({
    Name = "üåü ELITE HUB v8.1 COMPLETE",
    LoadingTitle = "‚ö° –ü–æ–ª–Ω–∞—è –≤–µ—Ä—Å–∏—è...",
    LoadingSubtitle = "üíú by gl0vakartelr | –í—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ ESP",
    Theme = {
        Background = ThemeColors.Main,
        Glow = ThemeColors.Accent,
        Text = ThemeColors.Text,
        Header = ThemeColors.Secondary,
        Button = ThemeColors.Secondary
    }
})

-- –û—Å–Ω–æ–≤–Ω—ã–µ –≤–∫–ª–∞–¥–∫–∏
local MainTab = Window:CreateTab("üè† –û–°–ù–û–í–ù–û–ï", 11286187172)
local ESPTab = Window:CreateTab("üëÅÔ∏è ESP", 6026568198)
local CombatTab = Window:CreateTab("üéØ AIMBOT", 7733960981)
local TeleportTab = Window:CreateTab("üåÄ –¢–ï–õ–ï–ü–û–†–¢", 6023426915)
local KillAllTab = Window:CreateTab("‚öîÔ∏è –£–ë–ò–¢–¨ –í–°–ï–•", 0)

local Players = game:GetService("Players")
local player = Players.LocalPlayer

--[[
    ==============================
    –†–ê–ó–î–ï–õ –û–°–ù–û–í–ù–´–• –§–£–ù–ö–¶–ò–ô
    ==============================
]]--
local AdventureSection = MainTab:CreateSection("üöÄ –û–°–ù–û–í–ù–´–ï –§–£–ù–ö–¶–ò–ò")

-- –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
local flyActive = false
local flyVelocity = nil
local noclipActive = false

-- –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—ë—Ç–∞
local function ToggleFlight()
    flyActive = not flyActive
    local character = game.Players.LocalPlayer.Character
    if not character or not character:FindFirstChild("HumanoidRootPart") then 
        Rayfield:Notify({
            Title = "‚ùå –û—à–∏–±–∫–∞",
            Content = "–ü–µ—Ä—Å–æ–Ω–∞–∂ –Ω–µ –Ω–∞–π–¥–µ–Ω!",
            Duration = 3
        })
        return 
    end
    
    if flyActive then
        if flyVelocity then flyVelocity:Destroy() end
        flyVelocity = Instance.new("BodyVelocity")
        flyVelocity.Velocity = Vector3.new(0, 0, 0)
        flyVelocity.MaxForce = Vector3.new(0, math.huge, 0)
        flyVelocity.P = 10000
        flyVelocity.Parent = character.HumanoidRootPart
        
        Rayfield:Notify({
            Title = "üõ©Ô∏è –ü–æ–ª—ë—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!",
            Content = "WASD - –¥–≤–∏–∂–µ–Ω–∏–µ\n–ü—Ä–æ–±–µ–ª/Shift - –≤—ã—Å–æ—Ç–∞",
            Duration = 5,
            Image = 6023426915
        })
    else
        if flyVelocity then flyVelocity:Destroy() end
        Rayfield:Notify({
            Title = "üõë –ü–æ–ª—ë—Ç –æ—Ç–∫–ª—é—á—ë–Ω",
            Content = "–†–µ–∂–∏–º –ø–æ–ª—ë—Ç–∞ –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω",
            Duration = 3,
            Image = 6022668888
        })
    end
end

-- –§—É–Ω–∫—Ü–∏—è Noclip
local function ToggleNoclip()
    noclipActive = not noclipActive
    Rayfield:Notify({
        Title = noclipActive and "üëª Noclip: –í–ö–õ" or "üö∑ Noclip: –í–´–ö–õ",
        Content = noclipActive and "–í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ—Ö–æ–¥–∏—Ç—å —Å–∫–≤–æ–∑—å —Å—Ç–µ–Ω—ã" or "–ö–æ–ª–ª–∏–∑–∏–∏ –≤–∫–ª—é—á–µ–Ω—ã",
        Duration = 3,
        Image = noclipActive and 6023426915 or 6022668888
    })
end

-- –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
MainTab:CreateButton({
    Name = "üõ´ –í–ö–õ/–í–´–ö–õ –ü–æ–ª—ë—Ç",
    Callback = ToggleFlight
})

MainTab:CreateButton({
    Name = "üëª –í–ö–õ/–í–´–ö–õ Noclip",
    Callback = ToggleNoclip
})

-- –ö–æ–º–±–æ-—Ñ—É–Ω–∫—Ü–∏—è "–í–∞–ª—Ö–∞–∫"
MainTab:CreateButton({
    Name = "üí• –ê–ö–¢–ò–í–ò–†–û–í–ê–¢–¨ –í–ê–õ–•–ê–ö (–ü–æ–ª—ë—Ç+Noclip)",
    Callback = function()
        ToggleFlight()
        ToggleNoclip()
        Rayfield:Notify({
            Title = "üí£ –í–ê–õ–•–ê–ö –ê–ö–¢–ò–í–ò–†–û–í–ê–ù!",
            Content = "–í—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –≤–∫–ª—é—á–µ–Ω—ã",
            Duration = 5,
            Image = 6023426915
        })
    end
})

--[[
    ==============================
    –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô –ü–õ–ê–í–ù–´–ô AIMBOT
    ==============================
]]--
local AimbotSection = CombatTab:CreateSection("üéØ AIMBOT")

-- –£–õ–£–ß–®–ï–ù–ù–ê–Ø –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∞–∏–º–±–æ—Ç–∞
local AimbotConfig = {
    Enabled = false,
    TeamCheck = true,
    FOV = 100,
    ShowFOV = true,
    FOVColor = Color3.fromRGB(170, 0, 255),
    Smoothness = 0.3, -- –£–í–ï–õ–ò–ß–ï–ù–û –¥–ª—è –ø–ª–∞–≤–Ω–æ—Å—Ç–∏
    TargetPart = "Head",
    Keybind = "MouseButton2",
    ThirdPersonFix = true,
    VisibilityCheck = true,
    Prediction = 0.05, -- –£–ú–ï–ù–¨–®–ï–ù–û –¥–ª—è —Ç–æ—á–Ω–æ—Å—Ç–∏
    AutoFire = false,
    FriendCheck = false,
    Sensitivity = 1.0,
    AutoFireRate = 0.1,
    AutoFireLastShot = 0,
    MaxAngle = math.rad(5) -- –ù–û–í–û–ï: –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —É–≥–ª–∞
}

-- –ö—Ä—É–≥ FOV
local FOVCircle = Drawing.new("Circle")
FOVCircle.Visible = false
FOVCircle.Radius = AimbotConfig.FOV
FOVCircle.Color = AimbotConfig.FOVColor
FOVCircle.Thickness = 2
FOVCircle.Filled = false
FOVCircle.Position = Vector2.new(workspace.CurrentCamera.ViewportSize.X / 2, workspace.CurrentCamera.ViewportSize.Y / 2)

-- –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–º–∞–Ω–¥—ã
local function IsEnemy(targetPlayer)
    if not AimbotConfig.TeamCheck then return true end
    if not player.Team or not targetPlayer.Team then return true end
    return player.Team ~= targetPlayer.Team
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏
local function IsVisible(targetPart)
    if not AimbotConfig.VisibilityCheck then return true end
    
    local camera = workspace.CurrentCamera
    local origin = camera.CFrame.Position
    local direction = (targetPart.Position - origin).Unit * 1000
    local ray = Ray.new(origin, direction)
    
    local hit, position = workspace:FindPartOnRayWithIgnoreList(ray, {player.Character})
    return hit and hit:IsDescendantOf(targetPart.Parent)
end

-- –§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ —Ü–µ–ª–∏
local function GetBestTarget()
    local bestTarget = nil
    local bestDistance = math.huge
    local localPlayer = player
    local camera = workspace.CurrentCamera
    
    if not camera or not localPlayer.Character then return nil end
    
    local cameraPos = camera.CFrame.Position
    local mousePos = Vector2.new(camera.ViewportSize.X / 2, camera.ViewportSize.Y / 2)
    
    for _, targetPlayer in ipairs(Players:GetPlayers()) do
        if targetPlayer == localPlayer then continue end
        if not IsEnemy(targetPlayer) then continue end
        if not targetPlayer.Character then continue end
        
        local character = targetPlayer.Character
        local humanoid = character:FindFirstChildOfClass("Humanoid")
        if not humanoid or humanoid.Health <= 0 then continue end
        
        local targetPart = character:FindFirstChild(AimbotConfig.TargetPart)
        if not targetPart then continue end
        
        if not IsVisible(targetPart) then continue end
        
        local screenPos, onScreen = camera:WorldToViewportPoint(targetPart.Position)
        if not onScreen then continue end
        
        local distance = (targetPart.Position - cameraPos).Magnitude
        local mouseDistance = (Vector2.new(screenPos.X, screenPos.Y) - mousePos).Magnitude
        
        if mouseDistance > AimbotConfig.FOV then continue end
        
        if distance < bestDistance then
            bestTarget = targetPart
            bestDistance = distance
        end
    end
    
    return bestTarget
end

-- –ù–û–í–ê–Ø –ü–õ–ê–í–ù–ê–Ø —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–∏—Ü–µ–ª–∏–≤–∞–Ω–∏—è
local function SmoothAim(target)
    if not target then return end
    
    local camera = workspace.CurrentCamera
    local currentCFrame = camera.CFrame
    local targetPosition = target.Position
    
    -- –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ
    local velocity = target.AssemblyLinearVelocity or target.Velocity or Vector3.new(0, 0, 0)
    local predictedPosition = targetPosition + (velocity * AimbotConfig.Prediction)
    
    -- –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —É–≥–æ–ª –ø–æ–≤–æ—Ä–æ—Ç–∞ –∑–∞ –∫–∞–¥—Ä
    local maxAngle = AimbotConfig.MaxAngle
    
    local currentLook = currentCFrame.LookVector
    local desiredLook = (predictedPosition - currentCFrame.Position).Unit
    
    -- –í—ã—á–∏—Å–ª—è–µ–º —É–≥–æ–ª –º–µ–∂–¥—É —Ç–µ–∫—É—â–∏–º –∏ –∂–µ–ª–∞–µ–º—ã–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º
    local dot = currentLook:Dot(desiredLook)
    local angle = math.acos(math.clamp(dot, -1, 1))
    
    -- –ï—Å–ª–∏ —É–≥–æ–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π, –ø–ª–∞–≤–Ω–æ –∏–Ω—Ç–µ—Ä–ø–æ–ª–∏—Ä—É–µ–º
    if angle > maxAngle then
        local t = maxAngle / angle
        desiredLook = currentLook:Lerp(desiredLook, t)
    end
    
    -- –ü—Ä–∏–º–µ–Ω—è–µ–º –ø–ª–∞–≤–Ω–æ—Å—Ç—å
    local smoothness = math.clamp(AimbotConfig.Smoothness, 0.05, 1.0)
    local finalLook = currentLook:Lerp(desiredLook, smoothness)
    
    camera.CFrame = CFrame.lookAt(currentCFrame.Position, currentCFrame.Position + finalLook)
end

-- –§—É–Ω–∫—Ü–∏—è –∞–≤—Ç–æ-–æ–≥–Ω—è
local function HandleAutoFire()
    if not AimbotConfig.AutoFire then return end
    if tick() - AimbotConfig.AutoFireLastShot < AimbotConfig.AutoFireRate then return end
    
    if not player.Character then return end
    
    local tool = player.Character:FindFirstChildOfClass("Tool")
    if not tool then return end
    
    local remoteEvent = tool:FindFirstChildWhichIsA("RemoteEvent")
    local remoteFunction = tool:FindFirstChildWhichIsA("RemoteFunction")
    
    if remoteEvent then
        pcall(function() remoteEvent:FireServer("left") end)
    elseif remoteFunction then
        pcall(function() remoteFunction:InvokeServer("left") end)
    end
    
    AimbotConfig.AutoFireLastShot = tick()
end

-- –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –∞–∏–º–±–æ—Ç–∞
task.spawn(function()
    while task.wait(0.03) do
        FOVCircle.Visible = AimbotConfig.Enabled and AimbotConfig.ShowFOV
        FOVCircle.Radius = AimbotConfig.FOV
        FOVCircle.Color = AimbotConfig.FOVColor
        FOVCircle.Position = Vector2.new(workspace.CurrentCamera.ViewportSize.X / 2, workspace.CurrentCamera.ViewportSize.Y / 2)
        
        if AimbotConfig.Enabled and (game:GetService("UserInputService"):IsMouseButtonPressed(Enum.UserInputType[AimbotConfig.Keybind]) or AimbotConfig.AutoFire) then
            local target = GetBestTarget()
            if target then
                SmoothAim(target) -- –ò–°–ü–û–õ–¨–ó–£–ï–ú –ü–õ–ê–í–ù–´–ô –ê–ò–ú–ë–û–¢
                HandleAutoFire()
            end
        end
    end
end)

-- –≠–ª–µ–º–µ–Ω—Ç—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–∏–º–±–æ—Ç–æ–º
CombatTab:CreateToggle({
    Name = "üéØ –í–∫–ª—é—á–∏—Ç—å Aimbot",
    CurrentValue = AimbotConfig.Enabled,
    Callback = function(value)
        AimbotConfig.Enabled = value
    end
})

CombatTab:CreateToggle({
    Name = "üë• –ò–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É",
    CurrentValue = AimbotConfig.TeamCheck,
    Callback = function(value)
        AimbotConfig.TeamCheck = value
    end
})

CombatTab:CreateToggle({
    Name = "üî• –ê–≤—Ç–æ-–æ–≥–æ–Ω—å",
    CurrentValue = AimbotConfig.AutoFire,
    Callback = function(value)
        AimbotConfig.AutoFire = value
    end
})

CombatTab:CreateSlider({
    Name = "üîò –†–∞–¥–∏—É—Å –ø–æ–∏—Å–∫–∞ (FOV)",
    Range = {10, 500},
    Increment = 10,
    CurrentValue = AimbotConfig.FOV,
    Callback = function(value)
        AimbotConfig.FOV = value
    end
})

CombatTab:CreateSlider({
    Name = "üîÑ –ü–ª–∞–≤–Ω–æ—Å—Ç—å –Ω–∞–≤–µ–¥–µ–Ω–∏—è",
    Range = {0.05, 0.5},
    Increment = 0.01,
    CurrentValue = AimbotConfig.Smoothness,
    Callback = function(value)
        AimbotConfig.Smoothness = value
    end
})

CombatTab:CreateSlider({
    Name = "üîÆ –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ",
    Range = {0.0, 0.5},
    Increment = 0.01,
    CurrentValue = AimbotConfig.Prediction,
    Callback = function(value)
        AimbotConfig.Prediction = value
    end
})

CombatTab:CreateSlider({
    Name = "üìê –ú–∞–∫—Å. —É–≥–æ–ª –ø–æ–≤–æ—Ä–æ—Ç–∞",
    Range = {1, 15},
    Increment = 1,
    Suffix = "–≥—Ä–∞–¥—É—Å–æ–≤",
    CurrentValue = math.deg(AimbotConfig.MaxAngle),
    Callback = function(value)
        AimbotConfig.MaxAngle = math.rad(value)
    end
})

CombatTab:CreateColorPicker({
    Name = "üé® –¶–≤–µ—Ç FOV –∫—Ä—É–≥–∞",
    Color = AimbotConfig.FOVColor,
    Callback = function(value)
        AimbotConfig.FOVColor = value
    end
})

--[[
    ==============================
    –ü–û–õ–ù–´–ô ESP –° 3D BOX –ò –í–°–ï–ú–ò –§–£–ù–ö–¶–ò–Ø–ú–ò
    ==============================
]]--
local ESPConfig = {
    Enabled = false,
    TeamCheck = true,
    ShowTeammates = true,
    
    -- –í–°–ï —Ñ—É–Ω–∫—Ü–∏–∏ ESP
    Boxes = true,
    Names = true,
    Health = true,
    Distance = true,
    Tracers = true,
    TracersForTeammates = false,
    ShowDead = true,
    Box3DEnabled = true,
    Box3DFilled = false,
    
    UpdateFrequency = 0.05,
    EnemyColor = Color3.fromRGB(255, 50, 50),
    TeammateColor = Color3.fromRGB(50, 255, 50),
    OutlineColor = Color3.fromRGB(255, 255, 255),
    TextColor = Color3.fromRGB(255, 255, 255),
    TracerColor = Color3.fromRGB(255, 50, 255),
    Box3DColor = Color3.fromRGB(0, 255, 0),
    DeadColor = Color3.fromRGB(255, 0, 0),
    TextSize = 14,
    FillTransparency = 0.5,
    TracerThickness = 1,
    Box3DThickness = 1,
    Box3DSize = 2.0
}

local ESPObjects = {}
local TracerLines = {}
local Box3DObjects = {}

-- –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–º–∞–Ω–¥—ã
local function IsTeammate(targetPlayer)
    if not ESPConfig.TeamCheck then return false end
    if not player.Team or not targetPlayer.Team then return false end
    return player.Team == targetPlayer.Team
end

-- –§—É–Ω–∫—Ü–∏—è –æ—á–∏—Å—Ç–∫–∏ ESP
local function ClearPlayerESP(targetPlayer)
    if ESPObjects[targetPlayer] then
        if ESPObjects[targetPlayer].Highlight then 
            ESPObjects[targetPlayer].Highlight:Destroy() 
        end
        if ESPObjects[targetPlayer].Billboard then 
            ESPObjects[targetPlayer].Billboard:Destroy() 
        end
        ESPObjects[targetPlayer] = nil
    end
    
    if TracerLines[targetPlayer] then
        TracerLines[targetPlayer]:Remove()
        TracerLines[targetPlayer] = nil
    end
    
    if Box3DObjects[targetPlayer] then
        for _, line in ipairs(Box3DObjects[targetPlayer]) do
            if line then
                line:Remove()
            end
        end
        Box3DObjects[targetPlayer] = nil
    end
end

-- –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è ESP —Å 3D –±–æ–∫—Å–∞–º–∏
local function CreatePlayerESP(targetPlayer)
    if targetPlayer == player then return end
    if IsTeammate(targetPlayer) and not ESPConfig.ShowTeammates then return end
    
    ClearPlayerESP(targetPlayer)
    if not targetPlayer.Character then return end
    
    local character = targetPlayer.Character
    local humanoid = character:FindFirstChildOfClass("Humanoid")
    local rootPart = character:FindFirstChild("HumanoidRootPart")
    
    if not rootPart then return end
    
    local espGroup = {}
    local isTeammate = IsTeammate(targetPlayer)
    local fillColor = isTeammate and ESPConfig.TeammateColor or ESPConfig.EnemyColor
    
    -- Box ESP
    if ESPConfig.Boxes then
        local highlight = Instance.new("Highlight")
        highlight.FillColor = fillColor
        highlight.OutlineColor = ESPConfig.OutlineColor
        highlight.FillTransparency = ESPConfig.FillTransparency
        highlight.Adornee = character
        highlight.Parent = character
        espGroup.Highlight = highlight
    end

    -- Text Label
    if ESPConfig.Names or ESPConfig.Health or ESPConfig.Distance then
        local billboard = Instance.new("BillboardGui")
        billboard.Name = "ESP_" .. targetPlayer.Name
        billboard.AlwaysOnTop = true
        billboard.ExtentsOffset = Vector3.new(0, 3, 0)
        billboard.Size = UDim2.new(0, 200, 0, 50)
        billboard.Adornee = rootPart
        billboard.Parent = rootPart

        local textLabel = Instance.new("TextLabel")
        textLabel.BackgroundTransparency = 1
        textLabel.Size = UDim2.new(1, 0, 1, 0)
        textLabel.TextColor3 = fillColor
        textLabel.TextSize = ESPConfig.TextSize
        textLabel.Font = Enum.Font.SourceSansBold
        textLabel.TextStrokeTransparency = 0
        textLabel.TextStrokeColor3 = Color3.new(0, 0, 0)
        textLabel.Parent = billboard
        espGroup.Billboard = billboard
        espGroup.TextLabel = textLabel
    end
    
    -- –¢—Ä–∞—Å—Å–µ—Ä—ã
    if ESPConfig.Tracers and (not isTeammate or ESPConfig.TracersForTeammates) then
        local tracer = Drawing.new("Line")
        tracer.Visible = false
        tracer.Color = isTeammate and ESPConfig.TeammateColor or ESPConfig.TracerColor
        tracer.Thickness = ESPConfig.TracerThickness
        TracerLines[targetPlayer] = tracer
    end
    
    -- 3D Box ESP
    if ESPConfig.Box3DEnabled then
        local boxLines = {}
        for i = 1, 12 do
            local line = Drawing.new("Line")
            line.Visible = false
            line.Color = ESPConfig.Box3DColor
            line.Thickness = ESPConfig.Box3DThickness
            table.insert(boxLines, line)
        end
        Box3DObjects[targetPlayer] = boxLines
    end

    ESPObjects[targetPlayer] = espGroup
    
    -- –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
    if character then
        character.AncestryChanged:Connect(function(_, parent)
            if not parent then ClearPlayerESP(targetPlayer) end
        end)
    end
    
    if humanoid then
        humanoid.Died:Connect(function()
            if not ESPConfig.ShowDead then
                ClearPlayerESP(targetPlayer)
            end
        end)
    end
    
    targetPlayer.CharacterAdded:Connect(function(newCharacter)
        task.wait(2)
        if ESPConfig.Enabled then
            CreatePlayerESP(targetPlayer)
        end
    end)
end

-- –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ ESP
local function UpdateESPText()
    for targetPlayer, espGroup in pairs(ESPObjects) do
        if espGroup.TextLabel and targetPlayer.Character then
            local character = targetPlayer.Character
            local humanoid = character:FindFirstChildOfClass("Humanoid")
            local rootPart = character:FindFirstChild("HumanoidRootPart")
            
            if rootPart and espGroup.Billboard and espGroup.Billboard.Parent then
                local isDead = humanoid and humanoid.Health <= 0
                local isTeammate = IsTeammate(targetPlayer)
                local text = ""
                
                if ESPConfig.Names then
                    text = text .. targetPlayer.Name .. (isDead and " üíÄ" or "") .. "\n"
                end
                
                if not isDead or ESPConfig.ShowDead then
                    if ESPConfig.Health and humanoid then
                        text = text .. (isDead and "üíÄ –ú–ï–†–¢–í\n" or "‚ù§ " .. math.floor(humanoid.Health) .. "/" .. math.floor(humanoid.MaxHealth) .. "\n")
                    end
                    
                    if ESPConfig.Distance and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                        local localRoot = player.Character.HumanoidRootPart
                        if localRoot then
                            local distance = (localRoot.Position - rootPart.Position).Magnitude
                            text = text .. "üìè " .. math.floor(distance) .. "m"
                        end
                    end
                end
                
                local fillColor = isTeammate and ESPConfig.TeammateColor or ESPConfig.EnemyColor
                if isDead then
                    espGroup.TextLabel.TextColor3 = ESPConfig.DeadColor
                    if espGroup.Highlight then 
                        espGroup.Highlight.FillColor = ESPConfig.DeadColor 
                    end
                else
                    espGroup.TextLabel.TextColor3 = fillColor
                    if espGroup.Highlight then 
                        espGroup.Highlight.FillColor = fillColor 
                    end
                end
                
                espGroup.TextLabel.Text = text
            end
        end
    end
end

-- –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç—Ä–∞—Å—Å–µ—Ä–æ–≤
local function UpdateTracers()
    if not ESPConfig.Enabled or not ESPConfig.Tracers then return end
    
    local camera = workspace.CurrentCamera
    
    for targetPlayer, tracer in pairs(TracerLines) do
        if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
            local humanoid = targetPlayer.Character:FindFirstChildOfClass("Humanoid")
            local rootPart = targetPlayer.Character.HumanoidRootPart
            local isDead = humanoid and humanoid.Health <= 0
            local isTeammate = IsTeammate(targetPlayer)
            
            if isDead and not ESPConfig.ShowDead then
                tracer.Visible = false
                continue
            end
            
            local screenPos, onScreen = camera:WorldToViewportPoint(rootPart.Position)
            
            if onScreen then
                tracer.From = Vector2.new(camera.ViewportSize.X / 2, camera.ViewportSize.Y)
                tracer.To = Vector2.new(screenPos.X, screenPos.Y)
                tracer.Visible = true
                tracer.Color = isTeammate and ESPConfig.TeammateColor or ESPConfig.TracerColor
            else
                tracer.Visible = false
            end
        else
            tracer.Visible = false
        end
    end
end

-- –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è 3D Box ESP
local function UpdateBox3DESP()
    if not ESPConfig.Enabled or not ESPConfig.Box3DEnabled then return end
    
    local camera = workspace.CurrentCamera
    
    for targetPlayer, lines in pairs(Box3DObjects) do
        if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
            local humanoid = targetPlayer.Character:FindFirstChildOfClass("Humanoid")
            local rootPart = targetPlayer.Character.HumanoidRootPart
            local head = targetPlayer.Character:FindFirstChild("Head")
            
            if not humanoid or not rootPart or not head then
                for _, line in ipairs(lines) do
                    line.Visible = false
                end
                continue
            end
            
            local isDead = humanoid.Health <= 0
            if isDead and not ESPConfig.ShowDead then
                for _, line in ipairs(lines) do
                    line.Visible = false
                end
                continue
            end
            
            -- –°–æ–∑–¥–∞–µ–º 3D –∫–æ—Ä–æ–±–∫—É –≤–æ–∫—Ä—É–≥ –∏–≥—Ä–æ–∫–∞
            local size = Vector3.new(3, 5, 3) * ESPConfig.Box3DSize
            local corners = {
                rootPart.Position + Vector3.new(-size.X/2, -size.Y/2, -size.Z/2),
                rootPart.Position + Vector3.new(size.X/2, -size.Y/2, -size.Z/2),
                rootPart.Position + Vector3.new(size.X/2, size.Y/2, -size.Z/2),
                rootPart.Position + Vector3.new(-size.X/2, size.Y/2, -size.Z/2),
                rootPart.Position + Vector3.new(-size.X/2, -size.Y/2, size.Z/2),
                rootPart.Position + Vector3.new(size.X/2, -size.Y/2, size.Z/2),
                rootPart.Position + Vector3.new(size.X/2, size.Y/2, size.Z/2),
                rootPart.Position + Vector3.new(-size.X/2, size.Y/2, size.Z/2)
            }
            
            -- –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —É–≥–ª—ã –≤ 2D –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã
            local screenCorners = {}
            local allVisible = true
            
            for i, corner in ipairs(corners) do
                local screenPos, visible = camera:WorldToViewportPoint(corner)
                screenCorners[i] = Vector2.new(screenPos.X, screenPos.Y)
                if not visible then allVisible = false end
            end
            
            if not allVisible then
                for _, line in ipairs(lines) do
                    line.Visible = false
                end
                continue
            end
            
            -- –†–∏—Å—É–µ–º –ª–∏–Ω–∏–∏ –∫–æ—Ä–æ–±–∫–∏
            local connections = {
                {1, 2}, {2, 3}, {3, 4}, {4, 1}, -- –Ω–∏–∂–Ω–∏–π –∫–≤–∞–¥—Ä–∞—Ç
                {5, 6}, {6, 7}, {7, 8}, {8, 5}, -- –≤–µ—Ä—Ö–Ω–∏–π –∫–≤–∞–¥—Ä–∞—Ç
                {1, 5}, {2, 6}, {3, 7}, {4, 8}  -- –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–µ –ª–∏–Ω–∏–∏
            }
            
            for i, connection in ipairs(connections) do
                if lines[i] then
                    lines[i].From = screenCorners[connection[1]]
                    lines[i].To = screenCorners[connection[2]]
                    lines[i].Visible = true
                    lines[i].Color = isDead and ESPConfig.DeadColor or ESPConfig.Box3DColor
                    lines[i].Thickness = ESPConfig.Box3DThickness
                end
            end
        else
            for _, line in ipairs(lines) do
                line.Visible = false
            end
        end
    end
end

-- –ü–æ–ª–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ ESP
local function UpdateESP()
    for targetPlayer, _ in pairs(ESPObjects) do
        ClearPlayerESP(targetPlayer)
    end
    
    if not ESPConfig.Enabled then return end

    for _, targetPlayer in ipairs(Players:GetPlayers()) do
        if targetPlayer ~= player then
            CreatePlayerESP(targetPlayer)
        end
    end
end

-- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è ESP
local function InitializeESPHandlers()
    game.Players.PlayerAdded:Connect(function(targetPlayer)
        if ESPConfig.Enabled then
            task.wait(2)
            CreatePlayerESP(targetPlayer)
        end
    end)
    
    game.Players.PlayerRemoving:Connect(function(targetPlayer)
        ClearPlayerESP(targetPlayer)
    end)
    
    for _, targetPlayer in ipairs(Players:GetPlayers()) do
        if targetPlayer ~= player and ESPConfig.Enabled then
            task.wait(0.2)
            CreatePlayerESP(targetPlayer)
        end
    end
end

-- –¶–∏–∫–ª –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è ESP
task.spawn(function()
    while task.wait(ESPConfig.UpdateFrequency) do
        if ESPConfig.Enabled then
            pcall(function()
                UpdateESPText()
                UpdateTracers()
                if ESPConfig.Box3DEnabled then
                    UpdateBox3DESP()
                end
            end)
        end
    end
end)

-- –≠–ª–µ–º–µ–Ω—Ç—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è ESP
ESPTab:CreateToggle({
    Name = "üëÅÔ∏è –í–ö–õ/–í–´–ö–õ ESP",
    CurrentValue = ESPConfig.Enabled,
    Callback = function(value)
        ESPConfig.Enabled = value
        if value then
            InitializeESPHandlers()
            Rayfield:Notify({
                Title = "üëÅÔ∏è ESP –í–ö–õ–Æ–ß–Å–ù",
                Content = "–í—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ ESP –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω—ã",
                Duration = 3
            })
        else
            for targetPlayer, _ in pairs(ESPObjects) do
                ClearPlayerESP(targetPlayer)
            end
            Rayfield:Notify({
                Title = "üëÄ ESP –í–´–ö–õ–Æ–ß–ï–ù",
                Content = "ESP –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω",
                Duration = 2
            })
        end
    end
})

ESPTab:CreateToggle({
    Name = "üë• –ò–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É",
    CurrentValue = ESPConfig.TeamCheck,
    Callback = function(value)
        ESPConfig.TeamCheck = value
        UpdateESP()
    end
})

ESPTab:CreateToggle({
    Name = "üíö –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å —Ç–∏–º–º–µ–π—Ç–æ–≤",
    CurrentValue = ESPConfig.ShowTeammates,
    Callback = function(value)
        ESPConfig.ShowTeammates = value
        UpdateESP()
    end
})

ESPTab:CreateToggle({
    Name = "üü¶ –†–∞–º–∫–∏",
    CurrentValue = ESPConfig.Boxes,
    Callback = function(value)
        ESPConfig.Boxes = value
        UpdateESP()
    end
})

ESPTab:CreateToggle({
    Name = "üìõ –ò–º–µ–Ω–∞",
    CurrentValue = ESPConfig.Names,
    Callback = function(value)
        ESPConfig.Names = value
        UpdateESP()
    end
})

ESPTab:CreateToggle({
    Name = "‚ù§ –ó–¥–æ—Ä–æ–≤—å–µ",
    CurrentValue = ESPConfig.Health,
    Callback = function(value)
        ESPConfig.Health = value
        UpdateESP()
    end
})

ESPTab:CreateToggle({
    Name = "üìè –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ",
    CurrentValue = ESPConfig.Distance,
    Callback = function(value)
        ESPConfig.Distance = value
        UpdateESP()
    end
})

ESPTab:CreateToggle({
    Name = "‚ûñ –¢—Ä–∞—Å—Å–µ—Ä—ã",
    CurrentValue = ESPConfig.Tracers,
    Callback = function(value)
        ESPConfig.Tracers = value
        UpdateESP()
    end
})

ESPTab:CreateToggle({
    Name = "üßµ –¢—Ä–∞—Å—Å–µ—Ä—ã –¥–ª—è —Ç–∏–º–º–µ–π—Ç–æ–≤",
    CurrentValue = ESPConfig.TracersForTeammates,
    Callback = function(value)
        ESPConfig.TracersForTeammates = value
        UpdateESP()
    end
})

ESPTab:CreateToggle({
    Name = "üíÄ –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –º–µ—Ä—Ç–≤—ã—Ö",
    CurrentValue = ESPConfig.ShowDead,
    Callback = function(value)
        ESPConfig.ShowDead = value
        UpdateESP()
    end
})

ESPTab:CreateToggle({
    Name = "üéØ 3D Box ESP",
    CurrentValue = ESPConfig.Box3DEnabled,
    Callback = function(value)
        ESPConfig.Box3DEnabled = value
        if not value then
            for targetPlayer, lines in pairs(Box3DObjects) do
                for _, line in ipairs(lines) do
                    line:Remove()
                end
            end
            Box3DObjects = {}
        else
            UpdateESP()
        end
    end
})

ESPTab:CreateColorPicker({
    Name = "üî¥ –¶–≤–µ—Ç –≤—Ä–∞–≥–æ–≤",
    Color = ESPConfig.EnemyColor,
    Callback = function(value)
        ESPConfig.EnemyColor = value
        UpdateESP()
    end
})

ESPTab:CreateColorPicker({
    Name = "üíö –¶–≤–µ—Ç —Ç–∏–º–º–µ–π—Ç–æ–≤",
    Color = ESPConfig.TeammateColor,
    Callback = function(value)
        ESPConfig.TeammateColor = value
        UpdateESP()
    end
})

ESPTab:CreateColorPicker({
    Name = "üíÄ –¶–≤–µ—Ç –º–µ—Ä—Ç–≤—ã—Ö",
    Color = ESPConfig.DeadColor,
    Callback = function(value)
        ESPConfig.DeadColor = value
        UpdateESP()
    end
})

ESPTab:CreateColorPicker({
    Name = "üéØ –¶–≤–µ—Ç 3D Box",
    Color = ESPConfig.Box3DColor,
    Callback = function(value)
        ESPConfig.Box3DColor = value
        for targetPlayer, lines in pairs(Box3DObjects) do
            for _, line in ipairs(lines) do
                line.Color = value
            end
        end
    end
})

ESPTab:CreateSlider({
    Name = "üî¢ –†–∞–∑–º–µ—Ä —Ç–µ–∫—Å—Ç–∞",
    Range = {8, 24},
    Increment = 1,
    Suffix = "px",
    CurrentValue = ESPConfig.TextSize,
    Callback = function(value)
        ESPConfig.TextSize = value
        UpdateESP()
    end
})

ESPTab:CreateSlider({
    Name = "üå´Ô∏è –ü—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å",
    Range = {0, 1},
    Increment = 0.1,
    CurrentValue = ESPConfig.FillTransparency,
    Callback = function(value)
        ESPConfig.FillTransparency = value
        UpdateESP()
    end
})

ESPTab:CreateSlider({
    Name = "üìè –¢–æ–ª—â–∏–Ω–∞ –ª–∏–Ω–∏–π",
    Range = {1, 5},
    Increment = 1,
    CurrentValue = ESPConfig.TracerThickness,
    Callback = function(value)
        ESPConfig.TracerThickness = value
        UpdateESP()
    end
})

ESPTab:CreateSlider({
    Name = "üéØ –¢–æ–ª—â–∏–Ω–∞ 3D Box",
    Range = {1, 5},
    Increment = 1,
    CurrentValue = ESPConfig.Box3DThickness,
    Callback = function(value)
        ESPConfig.Box3DThickness = value
        for targetPlayer, lines in pairs(Box3DObjects) do
            for _, line in ipairs(lines) do
                line.Thickness = value
            end
        end
    end
})

ESPTab:CreateSlider({
    Name = "üìê –†–∞–∑–º–µ—Ä 3D Box",
    Range = {0.5, 5.0},
    Increment = 0.1,
    Suffix = "x",
    CurrentValue = ESPConfig.Box3DSize,
    Callback = function(value)
        ESPConfig.Box3DSize = value
    end
})

ESPTab:CreateSlider({
    Name = "‚ö° –ß–∞—Å—Ç–æ—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è ESP",
    Range = {0.02, 0.1},
    Increment = 0.01,
    Suffix = "—Å–µ–∫",
    CurrentValue = ESPConfig.UpdateFrequency,
    Callback = function(value)
        ESPConfig.UpdateFrequency = value
    end
})

--[[
    ==============================
    –¢–ï–õ–ï–ü–û–†–¢ (–ë–ï–ó –ò–ó–ú–ï–ù–ï–ù–ò–ô)
    ==============================
]]--
local TeleportSection = TeleportTab:CreateSection("üåÄ –£–õ–£–ß–®–ï–ù–ù–´–ô –¢–ï–õ–ï–ü–û–†–¢")

local teleporting = false
local teleportConnection
local TeleportConfig = {
    Distance = 10,
    Height = 0,
    MinDistance = 0,
    MaxDistance = 20,
    CurrentSpread = 0
}

local SelectedPlayer = nil
local PlayerList = {}

-- –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∏–≥—Ä–æ–∫–æ–≤
local function UpdatePlayerList()
    PlayerList = {}
    for _, targetPlayer in ipairs(Players:GetPlayers()) do
        if targetPlayer ~= player then
            table.insert(PlayerList, targetPlayer.Name)
        end
    end
    table.insert(PlayerList, "–í—Å–µ –∏–≥—Ä–æ–∫–∏")
    return PlayerList
end

-- –í—ã–ø–∞–¥–∞—é—â–∏–π —Å–ø–∏—Å–æ–∫ –¥–ª—è –≤—ã–±–æ—Ä–∞ –∏–≥—Ä–æ–∫–∞
local PlayerDropdown = TeleportTab:CreateDropdown({
    Name = "üë§ –í—ã–±–µ—Ä–∏—Ç–µ –∏–≥—Ä–æ–∫–∞",
    Options = UpdatePlayerList(),
    CurrentOption = "–í—Å–µ –∏–≥—Ä–æ–∫–∏",
    Callback = function(selected)
        if selected == "–í—Å–µ –∏–≥—Ä–æ–∫–∏" then
            SelectedPlayer = nil
        else
            SelectedPlayer = Players:FindFirstChild(selected)
        end
    end,
})

-- –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∏–≥—Ä–æ–∫–æ–≤ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏/–æ—Ç–∫–ª—é—á–µ–Ω–∏–∏
Players.PlayerAdded:Connect(function()
    PlayerDropdown:Refresh(UpdatePlayerList())
end)

Players.PlayerRemoving:Connect(function()
    PlayerDropdown:Refresh(UpdatePlayerList())
end)

-- –¢–µ–ª–µ–ø–æ—Ä—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –∏–ª–∏ –≤—Å–µ—Ö –∏–≥—Ä–æ–∫–æ–≤
TeleportTab:CreateButton({
    Name = "üåÄ –¢–µ–ª–µ–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ",
    Callback = function()
        if not player.Character then return end
        
        local root = player.Character.HumanoidRootPart
        if not root then return end
        
        if SelectedPlayer then
            if not SelectedPlayer.Character then return end
            
            local targetRoot = SelectedPlayer.Character:FindFirstChild("HumanoidRootPart")
            local targetHumanoid = SelectedPlayer.Character:FindFirstChildOfClass("Humanoid")
            
            if targetRoot and targetHumanoid and targetHumanoid.Health > 0 then
                local lookVector = root.CFrame.LookVector
                local targetPos = root.Position + (lookVector * TeleportConfig.Distance) + Vector3.new(0, TeleportConfig.Height, 0)
                targetRoot.CFrame = CFrame.new(targetPos)
                
                Rayfield:Notify({
                    Title = "üåÄ –¢–µ–ª–µ–ø–æ—Ä—Ç",
                    Content = "–ò–≥—Ä–æ–∫ " .. SelectedPlayer.Name .. " —Ç–µ–ª–µ–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω",
                    Duration = 3
                })
            end
        else
            local playersToTeleport = {}
            for _, targetPlayer in ipairs(Players:GetPlayers()) do
                if targetPlayer ~= player and targetPlayer.Character then
                    table.insert(playersToTeleport, targetPlayer)
                end
            end
            
            local lookVector = root.CFrame.LookVector
            local rightVector = root.CFrame.RightVector
            local centerPos = root.Position + (lookVector * TeleportConfig.Distance)
            
            for i, targetPlayer in ipairs(playersToTeleport) do
                local targetRoot = targetPlayer.Character:FindFirstChild("HumanoidRootPart")
                local targetHumanoid = targetPlayer.Character:FindFirstChildOfClass("Humanoid")
                
                if targetRoot and targetHumanoid and targetHumanoid.Health > 0 then
                    pcall(function()
                        if TeleportConfig.CurrentSpread == 0 then
                            targetRoot.CFrame = CFrame.new(centerPos + Vector3.new(0, TeleportConfig.Height, 0))
                        else
                            local offset = rightVector * ((i - 1) - (#playersToTeleport - 1) / 2) * TeleportConfig.CurrentSpread
                            local targetPos = centerPos + offset + Vector3.new(0, TeleportConfig.Height, 0)
                            targetRoot.CFrame = CFrame.new(targetPos)
                        end
                    end)
                end
            end
            
            Rayfield:Notify({
                Title = "üåÄ –¢–µ–ª–µ–ø–æ—Ä—Ç",
                Content = "–í—Å–µ –∏–≥—Ä–æ–∫–∏ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã",
                Duration = 3
            })
        end
    end
})

-- –ù–µ–ø—Ä–µ—Ä—ã–≤–Ω—ã–π —Ç–µ–ª–µ–ø–æ—Ä—Ç
TeleportTab:CreateButton({
    Name = "üåÄ –í–ö–õ/–í–´–ö–õ –ù–µ–ø—Ä–µ—Ä—ã–≤–Ω—ã–π —Ç–µ–ª–µ–ø–æ—Ä—Ç",
    Callback = function()
        teleporting = not teleporting
        
        if teleporting then
            if not player.Character then return end
            
            local root = player.Character.HumanoidRootPart
            if not root then return end
            
            teleportConnection = game:GetService("RunService").Heartbeat:Connect(function()
                if not player.Character or not root.Parent then
                    if teleportConnection then teleportConnection:Disconnect() end
                    return
                end
                
                local root = player.Character.HumanoidRootPart
                local lookVector = root.CFrame.LookVector
                local rightVector = root.CFrame.RightVector
                local centerPos = root.Position + (lookVector * TeleportConfig.Distance)
                
                local playersToTeleport = {}
                if SelectedPlayer then
                    if SelectedPlayer.Character then
                        table.insert(playersToTeleport, SelectedPlayer)
                    end
                else
                    for _, targetPlayer in ipairs(Players:GetPlayers()) do
                        if targetPlayer ~= player and targetPlayer.Character then
                            table.insert(playersToTeleport, targetPlayer)
                        end
                    end
                end
                
                for i, targetPlayer in ipairs(playersToTeleport) do
                    local targetRoot = targetPlayer.Character:FindFirstChild("HumanoidRootPart")
                    local targetHumanoid = targetPlayer.Character:FindFirstChildOfClass("Humanoid")
                    
                    if targetRoot and targetHumanoid and targetHumanoid.Health > 0 then
                        pcall(function()
                            if TeleportConfig.CurrentSpread == 0 then
                                targetRoot.CFrame = CFrame.new(centerPos + Vector3.new(0, TeleportConfig.Height, 0))
                            else
                                local offset = rightVector * ((i - 1) - (#playersToTeleport - 1) / 2) * TeleportConfig.CurrentSpread
                                local targetPos = centerPos + offset + Vector3.new(0, TeleportConfig.Height, 0)
                                targetRoot.CFrame = CFrame.new(targetPos)
                            end
                        end)
                    end
                end
            end)
            
            Rayfield:Notify({
                Title = "üåÄ –ù–ï–ü–†–ï–†–´–í–ù–´–ô –¢–ï–õ–ï–ü–û–†–¢ –ê–ö–¢–ò–í–ò–†–û–í–ê–ù",
                Content = SelectedPlayer and ("–ò–≥—Ä–æ–∫ " .. SelectedPlayer.Name .. " —Ç–µ–ª–µ–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è") or "–í—Å–µ –∏–≥—Ä–æ–∫–∏ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∏—Ä—É—é—Ç—Å—è",
                Duration = 3
            })
        else
            if teleportConnection then
                teleportConnection:Disconnect()
                teleportConnection = nil
                Rayfield:Notify({
                    Title = "üõë –¢–ï–õ–ï–ü–û–†–¢ –û–°–¢–ê–ù–û–í–õ–ï–ù",
                    Content = "–§—É–Ω–∫—Ü–∏—è –æ—Ç–∫–ª—é—á–µ–Ω–∞",
                    Duration = 2
                })
            end
        end
    end
})

-- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞
TeleportTab:CreateSlider({
    Name = "üìè –î–∏—Å—Ç–∞–Ω—Ü–∏—è —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏–∏",
    Range = {5, 50},
    Increment = 1,
    Suffix = "studs",
    CurrentValue = TeleportConfig.Distance,
    Callback = function(value)
        TeleportConfig.Distance = value
    end
})

TeleportTab:CreateSlider({
    Name = "üìê –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –º–µ–∂–¥—É –∏–≥—Ä–æ–∫–∞–º–∏",
    Range = {0, 20},
    Increment = 1,
    Suffix = "studs",
    CurrentValue = TeleportConfig.CurrentSpread,
    Callback = function(value)
        TeleportConfig.CurrentSpread = value
    end
})

TeleportTab:CreateLabel("0 = –≤—Å–µ –≤ –æ–¥–Ω–æ–º –º–µ—Å—Ç–µ, >0 = –≤ –ª–∏–Ω–∏—é")

--[[
    ==============================
    –†–ê–ó–î–ï–õ –£–ë–ò–¢–¨ –í–°–ï–•
    ==============================
]]--
local KillAllSection = KillAllTab:CreateSection("‚öîÔ∏è –£–ë–ò–¢–¨ –í–°–ï–• –í–†–ê–ì–û–í")

local safeZoneRadius = 20
local isActive = false
local killAllEnabled = true
local ignoreTeam = true

local zonePart = Instance.new("Part")
zonePart.Shape = Enum.PartType.Ball
zonePart.Anchored = true
zonePart.CanCollide = false
zonePart.Transparency = 0.7
zonePart.Color = Color3.fromRGB(0, 255, 0)
zonePart.Material = Enum.Material.Neon
zonePart.Name = "SafeZone"
zonePart.Parent = workspace

KillAllTab:CreateToggle({
   Name = "üõ°Ô∏è –í–∫–ª—é—á–∏—Ç—å Safe Zone",
   CurrentValue = isActive,
   Callback = function(Value)
      isActive = Value
   end,
})

KillAllTab:CreateToggle({
   Name = "‚öîÔ∏è –†–µ–∂–∏–º Kill All",
   CurrentValue = killAllEnabled,
   Callback = function(Value)
      killAllEnabled = Value
   end,
})

KillAllTab:CreateToggle({
   Name = "üë• –ò–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É",
   CurrentValue = ignoreTeam,
   Callback = function(Value)
      ignoreTeam = Value
   end,
})

KillAllTab:CreateSlider({
   Name = "üìè –†–∞–¥–∏—É—Å –±–µ–∑–æ–ø–∞—Å–Ω–æ–π –∑–æ–Ω—ã",
   Range = {5, 100},
   Increment = 1,
   Suffix = "studs",
   CurrentValue = safeZoneRadius,
   Callback = function(Value)
      safeZoneRadius = Value
   end,
})

-- –¶–∏–∫–ª Kill All
task.spawn(function()
    while task.wait(0.1) do
        local myChar = player.Character
        if not myChar or not myChar:FindFirstChild("HumanoidRootPart") then continue end
        
        local root = myChar.HumanoidRootPart
        zonePart.Position = root.Position
        zonePart.Size = Vector3.new(safeZoneRadius * 2, safeZoneRadius * 2, safeZoneRadius * 2)
        
        if not isActive then 
            zonePart.Transparency = 1
            continue 
        else
            zonePart.Transparency = 0.7
        end
        
        local tool = myChar:FindFirstChildOfClass("Tool")
        if not tool or not tool:FindFirstChild("Handle") then continue end
        
        for _, other in ipairs(Players:GetPlayers()) do
            if other ~= player and other.Character and other.Character:FindFirstChild("HumanoidRootPart") then
                if ignoreTeam and player.Team and other.Team and player.Team == other.Team then
                    continue
                end
                
                local oRoot = other.Character.HumanoidRootPart
                local dist = (oRoot.Position - root.Position).Magnitude
                
                local shouldAttack = killAllEnabled or (dist > safeZoneRadius)
                
                if shouldAttack and dist <= 100 then
                    tool:Activate()
                    for _, part in pairs(other.Character:GetChildren()) do
                        if part:IsA("BasePart") then
                            firetouchinterest(tool.Handle, part, 0)
                            firetouchinterest(tool.Handle, part, 1)
                        end
                    end
                end
            end
        end
    end
end)

--[[
    ==============================
    –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –°–ö–†–ò–ü–¢–´
    ==============================
]]--
local ScriptsSection = MainTab:CreateSection("üìú –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –°–ö–†–ò–ü–¢–´")

local scriptUrls = {
    "https://pastefy.app/YsJgITXR/raw",
    "https://pastebin.com/raw/3Rnd9rHf", 
    "https://glot.io/snippets/gua2ntmbdm/raw/main.lua",
    "https://pastefy.app/JOWniO6o/raw",
    "https://pastebin.com/raw/LgZwZ7ZB",
    "https://pastefy.app/w7KnPY70/raw"
}

local scriptNames = {
    "üëπ SCP-096 –†–µ–∂–∏–º",
    "üëª –ù–µ–≤–∏–¥–∏–º–æ—Å—Ç—å PRO", 
    "üõ°Ô∏è –ë–æ–≥-—Ä–µ–∂–∏–º+",
    "üßü –ó–æ–º–±–∏ —Ö–∞–∫–∏",
    "üèéÔ∏è —Ñ–ª–∏–Ω–≥+",
    "üßü –ü—Ä–æ—Å—Ç–æ–π –∑–æ–º–±–∏-–Ω–∞–ø–∞—Ä–Ω–∏–∫"
}

for i = 1, 6 do
    MainTab:CreateButton({
        Name = scriptNames[i],
        Callback = function()
            Rayfield:Notify({
                Title = "‚è≥ –ó–∞–≥—Ä—É–∑–∫–∞...",
                Content = "üì• "..scriptNames[i].." –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è",
                Duration = 3
            })
            
            local success, err = pcall(function()
                loadstring(game:HttpGet(scriptUrls[i], true))()
            end)
            
            if not success then
                Rayfield:Notify({
                    Title = "‚ùå –û—à–∏–±–∫–∞!",
                    Content = "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å:\n"..tostring(err),
                    Duration = 6
                })
            end
        end
    })
end

--[[
    ==============================
    –û–°–ù–û–í–ù–´–ï –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò
    ==============================
]]--
game:GetService("RunService").Stepped:Connect(function()
    if noclipActive and player.Character then
        for _, part in ipairs(player.Character:GetDescendants()) do
            if part:IsA("BasePart") then
                part.CanCollide = false
            end
        end
    end
end)

game:GetService("RunService").Heartbeat:Connect(function()
    if flyActive and flyVelocity and player.Character then
        local root = player.Character:FindFirstChild("HumanoidRootPart")
        if not root then return end
        
        local input = game:GetService("UserInputService")
        local newVelocity = Vector3.new(0, 0, 0)
        
        if input:IsKeyDown(Enum.KeyCode.W) then newVelocity = root.CFrame.LookVector * 50 end
        if input:IsKeyDown(Enum.KeyCode.S) then newVelocity = root.CFrame.LookVector * -50 end
        if input:IsKeyDown(Enum.KeyCode.A) then newVelocity = newVelocity - (root.CFrame.RightVector * 50) end
        if input:IsKeyDown(Enum.KeyCode.D) then newVelocity = newVelocity + (root.CFrame.RightVector * 50) end
        if input:IsKeyDown(Enum.KeyCode.Space) then newVelocity = newVelocity + Vector3.new(0, 50, 0) end
        if input:IsKeyDown(Enum.KeyCode.LeftShift) then newVelocity = newVelocity - Vector3.new(0, 50, 0) end
        
        if flyVelocity then
            flyVelocity.Velocity = newVelocity
        end
    end
end)

player.CharacterAdded:Connect(function(character)
    if flyActive then
        task.wait(1)
        ToggleFlight()
        ToggleFlight()
    end
    
    if ESPConfig.Enabled then
        task.wait(2)
        UpdateESP()
    end
end)

-- –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞–≥—Ä—É–∑–∫–µ
Rayfield:Notify({
    Title = "üíú ELITE HUB v8.1 COMPLETE –ó–ê–ì–†–£–ñ–ï–ù!",
    Content = "–ü–ª–∞–≤–Ω—ã–π –∞–∏–º–±–æ—Ç | –í—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ ESP –≤–æ–∑–≤—Ä–∞—â–µ–Ω—ã",
    Duration = 6,
    Image = 7733960981
})

print("üåü ELITE HUB v8.1 COMPLETE —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω!")