-- –ó–∞–≥—Ä—É–∑–∫–∞ Rayfield
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

-- –ö–∞—Å—Ç–æ–º–Ω–∞—è —Ñ–∏–æ–ª–µ—Ç–æ–≤–∞—è —Ç–µ–º–∞
local ThemeColors = {
    Main = Color3.fromRGB(30, 20, 50),
    Secondary = Color3.fromRGB(50, 35, 80),
    Accent = Color3.fromRGB(170, 0, 255),
    Text = Color3.fromRGB(240, 240, 240)
}

-- –°–æ–∑–¥–∞–Ω–∏–µ –æ–∫–Ω–∞ —Å –Ω–æ–≤–æ–π —Ç–µ–º–æ–π
local Window = Rayfield:CreateWindow({
    Name = "üåü ELITE HUB v8.2 ULTRA",
    LoadingTitle = "‚ö° –£–ª—å—Ç—Ä–∞ –≤–µ—Ä—Å–∏—è...",
    LoadingSubtitle = "üíú by gl0vakartelr | –í—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –≤–∫–ª—é—á–µ–Ω—ã",
    Theme = {
        Background = ThemeColors.Main,
        Glow = ThemeColors.Accent,
        Text = ThemeColors.Text,
        Header = ThemeColors.Secondary,
        Button = ThemeColors.Secondary
    }
})

-- –û—Å–Ω–æ–≤–Ω—ã–µ –≤–∫–ª–∞–¥–∫–∏
local MainTab = Window:CreateTab("üè† –û–°–ù–û–í–ù–û–ï", 11286187172)
local ESPTab = Window:CreateTab("üëÅÔ∏è ESP", 6026568198)
local CombatTab = Window:CreateTab("üéØ AIMBOT", 7733960981)
local TeleportTab = Window:CreateTab("üåÄ –¢–ï–õ–ï–ü–û–†–¢", 6023426915) -- –ù–æ–≤–∞—è –≤–∫–ª–∞–¥–∫–∞ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞
local KillAllTab = Window:CreateTab("‚öîÔ∏è –£–ë–ò–¢–¨ –í–°–ï–•", 0)
local GameHubTab = Window:CreateTab("üéÆ GAME HUB", 6022668888)
local Players = game:GetService("Players")
local player = Players.LocalPlayer

--[[
    ==============================
    –ù–û–í–ê–Ø –í–ö–õ–ê–î–ö–ê GAME HUB
    ==============================
]]--
local GameHubSection = GameHubTab:CreateSection("üéÆ GAME HUB - –ú—É–ª—å—Ç–∏-–∏–≥—Ä–æ–≤–æ–π —Ö–∞–±")
GameHubTab:CreateLabel("üéÆ Game Hub - –º—É–ª—å—Ç–∏-–∏–≥—Ä–æ–≤–æ–π —Ö–∞–± –æ—Ç GamerScripter")
GameHubTab:CreateLabel("‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –Ω–∞ —Å–≤–æ–π —Å—Ç—Ä–∞—Ö –∏ —Ä–∏—Å–∫!")

-- –ü—Ä—è–º–∞—è –∫–Ω–æ–ø–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ Game Hub
GameHubTab:CreateButton({
    Name = "‚ö° –ó–ê–ì–†–£–ó–ò–¢–¨ GAME HUB",
    Callback = function()
        Rayfield:Notify({
            Title = "üéÆ –ó–∞–≥—Ä—É–∑–∫–∞ Game Hub",
            Content = "–ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–ø—É—â–µ–Ω–∞...",
            Duration = 3
        })
        loadstring(game:HttpGet("https://raw.githubusercontent.com/GamerScripter/Game-Hub/main/loader"))()
    end,
})

-- –ö–Ω–æ–ø–∫–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –∫–æ–¥–∞
GameHubTab:CreateButton({
    Name = "üìÑ –ü–û–°–ú–û–¢–†–ï–¢–¨ –ò–°–•–û–î–ù–´–ô –ö–û–î",
    Callback = function()
        setclipboard("https://raw.githubusercontent.com/GamerScripter/Game-Hub/main/loader")
        Rayfield:Notify({
            Title = "üìÑ –°—Å—ã–ª–∫–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞",
            Content = "–°—Å—ã–ª–∫–∞ –Ω–∞ –∏—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥ Game Hub —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞",
            Duration = 5
        })
    end,
})

-- –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ Game Hub
GameHubTab:CreateButton({
    Name = "‚ÑπÔ∏è –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û GAME HUB",
    Callback = function()
        Rayfield:Notify({
            Title = "üéÆ Game Hub Information",
            Content = "Game Hub - –º—É–ª—å—Ç–∏-–∏–≥—Ä–æ–≤–æ–π —Ö–∞–± –æ—Ç GamerScripter\n\n–§—É–Ω–∫—Ü–∏–∏:\n‚Ä¢ –°–∫—Ä–∏–ø—Ç—ã –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∏–≥—Ä\n‚Ä¢ –ê–≤—Ç–æ-–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è\n‚Ä¢ –£–¥–æ–±–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å\n\n–°—Å—ã–ª–∫–∞: https://github.com/GamerScripter/Game-Hub",
            Duration = 8
        })
    end,
})

-- –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
GameHubTab:CreateSection("üõ°Ô∏è –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –ü–û –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò")
GameHubTab:CreateLabel("‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç")
GameHubTab:CreateLabel("‚Ä¢ –ù–µ –≤–≤–æ–¥–∏—Ç–µ –ª–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ")
GameHubTab:CreateLabel("‚Ä¢ –†–µ–≥—É–ª—è—Ä–Ω–æ –º–µ–Ω—è–π—Ç–µ –ø–∞—Ä–æ–ª–∏")
GameHubTab:CreateLabel("‚Ä¢ –ü—Ä–æ–≤–µ—Ä—è–π—Ç–µ –∞–∫–∫–∞—É–Ω—Ç –Ω–∞ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—É—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å")

-- –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å—Å—ã–ª–∫–µ
GameHubTab:CreateSection("üîó –°–°–´–õ–ö–ê –ù–ê –°–ö–†–ò–ü–¢")
GameHubTab:CreateLabel("GitHub: GamerScripter/Game-Hub")
GameHubTab:CreateLabel("–§–∞–π–ª: loader")
GameHubTab:CreateLabel("URL: raw.githubusercontent.com/.../loader")

--[[
    ==============================
    –†–ê–ó–î–ï–õ –û–°–ù–û–í–ù–´–• –§–£–ù–ö–¶–ò–ô
    ==============================
]]--
local AdventureSection = MainTab:CreateSection("üöÄ –û–°–ù–û–í–ù–´–ï –§–£–ù–ö–¶–ò–ò")

-- –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
local flyActive = false
local flyVelocity = nil
local noclipActive = false

-- –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—ë—Ç–∞
local function ToggleFlight()
    flyActive = not flyActive
    local character = game.Players.LocalPlayer.Character
    if not character or not character:FindFirstChild("HumanoidRootPart") then
        Rayfield:Notify({
            Title = "‚ùå –û—à–∏–±–∫–∞",
            Content = "–ü–µ—Ä—Å–æ–Ω–∞–∂ –Ω–µ –Ω–∞–π–¥–µ–Ω!",
            Duration = 3
        })
        return
    end

    if flyActive then
        if flyVelocity then flyVelocity:Destroy() end
        flyVelocity = Instance.new("BodyVelocity")
        flyVelocity.Velocity = Vector3.new(0, 0, 0)
        flyVelocity.MaxForce = Vector3.new(0, math.huge, 0)
        flyVelocity.P = 10000
        flyVelocity.Parent = character.HumanoidRootPart

        Rayfield:Notify({
            Title = "üõ©Ô∏è –ü–æ–ª—ë—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!",
            Content = "WASD - –¥–≤–∏–∂–µ–Ω–∏–µ\n–ü—Ä–æ–±–µ–ª/Shift - –≤—ã—Å–æ—Ç–∞",
            Duration = 5,
            Image = 6023426915
        })
    else
        if flyVelocity then flyVelocity:Destroy() end
        Rayfield:Notify({
            Title = "üõë –ü–æ–ª—ë—Ç –æ—Ç–∫–ª—é—á—ë–Ω",
            Content = "–†–µ–∂–∏–º –ø–æ–ª—ë—Ç–∞ –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω",
            Duration = 3,
            Image = 6022668888
        })
    end
end

-- –§—É–Ω–∫—Ü–∏—è Noclip
local function ToggleNoclip()
    noclipActive = not noclipActive
    Rayfield:Notify({
        Title = noclipActive and "üëª Noclip: –í–ö–õ" or "üö∑ Noclip: –í–´–ö–õ",
        Content = noclipActive and "–í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ—Ö–æ–¥–∏—Ç—å —Å–∫–≤–æ–∑—å —Å—Ç–µ–Ω—ã" or "–ö–æ–ª–ª–∏–∑–∏–∏ –≤–∫–ª—é—á–µ–Ω—ã",
        Duration = 3,
        Image = noclipActive and 6023426915 or 6022668888
    })
end

-- –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
MainTab:CreateButton({
    Name = "üõ´ –í–ö–õ/–í–´–ö–õ –ü–æ–ª—ë—Ç",
    Callback = ToggleFlight
})

MainTab:CreateButton({
    Name = "üëª –í–ö–õ/–í–´–ö–õ Noclip",
    Callback = ToggleNoclip
})

-- –ö–æ–º–±–æ-—Ñ—É–Ω–∫—Ü–∏—è "–í–∞–ª—Ö–∞–∫"
MainTab:CreateButton({
    Name = "üí• –ê–ö–¢–ò–í–ò–†–û–í–ê–¢–¨ –í–ê–õ–•–ê–ö (–ü–æ–ª—ë—Ç+Noclip)",
    Callback = function()
        ToggleFlight()
        ToggleNoclip()
        Rayfield:Notify({
            Title = "üí£ –í–ê–õ–•–ê–ö –ê–ö–¢–ò–í–ò–†–û–í–ê–ù!",
            Content = "–í—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –≤–∫–ª—é—á–µ–Ω—ã",
            Duration = 5,
            Image = 6023426915
        })
    end
})

--[[
    ==============================
    –£–õ–£–ß–®–ï–ù–ù–´–ô AIMBOT –° –ü–†–ò–û–†–ò–¢–ï–¢–û–ú –ü–û –î–ò–°–¢–ê–ù–¶–ò–ò
    ==============================
]]--
local AimbotSection = CombatTab:CreateSection("üéØ –£–õ–£–ß–®–ï–ù–ù–´–ô AIMBOT 3D FOV")
local AimbotConfig = {
    Enabled = true,
    TeamCheck = true,
    AliveCheck = true,
    WallCheck = true,
    Smoothness = 0.15,
    FOV = 120,
    ShowFOV = true,
    FOVColor = Color3.fromRGB(170, 0, 255),
    LockedColor = Color3.fromRGB(255, 50, 50),
    TriggerKey = "MouseButton2",
    Toggle = false,
    LockPart = "Head",
    ThirdPersonFix = true,
    Priority = "Distance"
}

-- 3D FOV –∫—Ä—É–≥
local FOVCircle = Drawing.new("Circle")
FOVCircle.Visible = AimbotConfig.ShowFOV
FOVCircle.Radius = AimbotConfig.FOV
FOVCircle.Color = AimbotConfig.FOVColor
FOVCircle.Thickness = 3
FOVCircle.Filled = false
FOVCircle.Position = Vector2.new(workspace.CurrentCamera.ViewportSize.X / 2, workspace.CurrentCamera.ViewportSize.Y / 2)
local Running = false
local LockedTarget = nil

-- –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏ (—Å–∫–≤–æ–∑—å —Å—Ç–µ–Ω—ã)
local function IsVisible(targetPart)
    if not AimbotConfig.WallCheck then return true end

    local camera = workspace.CurrentCamera
    local origin = camera.CFrame.Position
    local direction = (targetPart.Position - origin).Unit * 1000
    local ray = Ray.new(origin, direction)

    local hit, position = workspace:FindPartOnRayWithIgnoreList(ray, {player.Character})
    return hit and hit:IsDescendantOf(targetPart.Parent)
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è 1-–≥–æ –ª–∏—Ü–∞
local function IsFirstPerson()
    if not AimbotConfig.ThirdPersonFix then return false end
    local character = player.Character
    if not character then return false end

    local head = character:FindFirstChild("Head")
    if not head then return false end

    local camera = workspace.CurrentCamera
    local distance = (head.Position - camera.CFrame.Position).Magnitude
    return distance < 2
end

-- –ü–æ–∏—Å–∫ —Ü–µ–ª–∏ —Å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–º –ø–æ –¥–∏—Å—Ç–∞–Ω—Ü–∏–∏
local function GetClosestPlayer()
    if not AimbotConfig.Enabled then return nil end

    local camera = workspace.CurrentCamera
    local localPlayer = player
    local cameraPos = camera.CFrame.Position
    local mousePos = Vector2.new(camera.ViewportSize.X / 2, camera.ViewportSize.Y / 2)

    local bestTarget = nil
    local bestDistance = math.huge
    local bestScreenDistance = math.huge

    for _, targetPlayer in ipairs(Players:GetPlayers()) do
        if targetPlayer == localPlayer then continue end
        if AimbotConfig.TeamCheck and targetPlayer.Team == localPlayer.Team then continue end
        if not targetPlayer.Character then continue end

        local character = targetPlayer.Character
        local humanoid = character:FindFirstChildOfClass("Humanoid")
        local targetPart = character:FindFirstChild(AimbotConfig.LockPart)

        -- –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∂–∏–∑–Ω—å
        if AimbotConfig.AliveCheck and (not humanoid or humanoid.Health <= 0) then continue end
        if not targetPart then continue end

        -- –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∏–¥–∏–º–æ—Å—Ç–∏ (—Å—Ç–µ–Ω—ã)
        if not IsVisible(targetPart) then continue end

        local screenPos, onScreen = camera:WorldToViewportPoint(targetPart.Position)
        if not onScreen then continue end

        local screenPoint = Vector2.new(screenPos.X, screenPos.Y)
        local screenDistance = (screenPoint - mousePos).Magnitude
        local gameDistance = (targetPart.Position - cameraPos).Magnitude

        -- –í—ã–±–æ—Ä –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞
        if AimbotConfig.Priority == "Distance" then
            -- –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –ø–æ –¥–∏—Å—Ç–∞–Ω—Ü–∏–∏ –≤ –∏–≥—Ä–µ (–±–ª–∏–∂–∞–π—à–∏–π –∏–≥—Ä–æ–∫)
            if screenDistance <= AimbotConfig.FOV then
                if gameDistance < bestDistance then
                    bestDistance = gameDistance
                    bestTarget = targetPart
                    bestScreenDistance = screenDistance
                end
            end
        else
            -- –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –ø–æ –±–ª–∏–∑–æ—Å—Ç–∏ –∫ –∫—É—Ä—Å–æ—Ä—É (—Å—Ç–∞—Ä—ã–π –º–µ—Ç–æ–¥)
            if screenDistance < bestScreenDistance and screenDistance <= AimbotConfig.FOV then
                bestScreenDistance = screenDistance
                bestTarget = targetPart
                bestDistance = gameDistance
            end
        end
    end

    return bestTarget
end

-- –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –∞–∏–º–±–æ—Ç–∞
task.spawn(function()
    while task.wait() do
        FOVCircle.Visible = AimbotConfig.ShowFOV and AimbotConfig.Enabled
        FOVCircle.Radius = AimbotConfig.FOV
        FOVCircle.Color = LockedTarget and AimbotConfig.LockedColor or AimbotConfig.FOVColor
        FOVCircle.Position = Vector2.new(workspace.CurrentCamera.ViewportSize.X / 2, workspace.CurrentCamera.ViewportSize.Y / 2)

        if Running and AimbotConfig.Enabled then
            local target = GetClosestPlayer()
            if target then
                LockedTarget = target
                local camera = workspace.CurrentCamera
                local currentCF = camera.CFrame
                local targetPosition = target.Position

                local smoothness = AimbotConfig.Smoothness
                if IsFirstPerson() then
                    smoothness = smoothness * 0.8
                end

                local newCF = currentCF:Lerp(CFrame.new(currentCF.Position, targetPosition), smoothness)
                camera.CFrame = newCF
            else
                LockedTarget = nil
            end
        else
            LockedTarget = nil
        end
    end
end)

-- –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–ª–∞–≤–∏—à–∞–º–∏
game:GetService("UserInputService").InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType[AimbotConfig.TriggerKey] then
        if AimbotConfig.Toggle then
            Running = not Running
        else
            Running = true
        end
    end
end)

game:GetService("UserInputService").InputEnded:Connect(function(input)
    if not AimbotConfig.Toggle and input.UserInputType == Enum.UserInputType[AimbotConfig.TriggerKey] then
        Running = false
    end
end)

-- –≠–ª–µ–º–µ–Ω—Ç—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
CombatTab:CreateToggle({
    Name = "üéØ –í–∫–ª—é—á–∏—Ç—å Aimbot",
    CurrentValue = AimbotConfig.Enabled,
    Callback = function(value)
        AimbotConfig.Enabled = value
    end
})

CombatTab:CreateToggle({
    Name = "üë• –ò–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É",
    CurrentValue = AimbotConfig.TeamCheck,
    Callback = function(value)
        AimbotConfig.TeamCheck = value
    end
})

CombatTab:CreateToggle({
    Name = "üíÄ –ù–µ —Ü–µ–ª–∏—Ç—å —É–º–µ—Ä—à–∏—Ö",
    CurrentValue = AimbotConfig.AliveCheck,
    Callback = function(value)
        AimbotConfig.AliveCheck = value
    end
})

CombatTab:CreateToggle({
    Name = "üß± –ù–µ —Ü–µ–ª–∏—Ç—å —Å–∫–≤–æ–∑—å —Å—Ç–µ–Ω—ã",
    CurrentValue = AimbotConfig.WallCheck,
    Callback = function(value)
        AimbotConfig.WallCheck = value
    end
})

CombatTab:CreateToggle({
    Name = "üëÅÔ∏è –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ 1-–≥–æ –ª–∏—Ü–∞",
    CurrentValue = AimbotConfig.ThirdPersonFix,
    Callback = function(value)
        AimbotConfig.ThirdPersonFix = value
    end
})

CombatTab:CreateDropdown({
    Name = "üéØ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç —Ü–µ–ª–∏",
    Options = {"Distance", "FOV"},
    CurrentOption = AimbotConfig.Priority,
    Callback = function(option)
        AimbotConfig.Priority = option
        if option == "Distance" then
            Rayfield:Notify({
                Title = "üéØ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: –î–ò–°–¢–ê–ù–¶–ò–Ø",
                Content = "–¶–µ–ª–∏—Ç—Å—è –≤ –±–ª–∏–∂–∞–π—à–µ–≥–æ –∏–≥—Ä–æ–∫–∞",
                Duration = 3
            })
        else
            Rayfield:Notify({
                Title = "üéØ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: FOV",
                Content = "–¶–µ–ª–∏—Ç—Å—è –≤ –±–ª–∏–∂–∞–π—à–µ–≥–æ –∫ –∫—É—Ä—Å–æ—Ä—É",
                Duration = 3
            })
        end
    end
})

CombatTab:CreateSlider({
    Name = "üîò –†–∞–∑–º–µ—Ä FOV",
    Range = {50, 300},
    Increment = 10,
    CurrentValue = AimbotConfig.FOV,
    Callback = function(value)
        AimbotConfig.FOV = value
    end
})

CombatTab:CreateSlider({
    Name = "üîÑ –ß—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å",
    Range = {0.05, 0.5},
    Increment = 0.01,
    CurrentValue = AimbotConfig.Smoothness,
    Callback = function(value)
        AimbotConfig.Smoothness = value
    end
})

CombatTab:CreateDropdown({
    Name = "üéØ –ß–∞—Å—Ç—å —Ç–µ–ª–∞",
    Options = {"Head", "HumanoidRootPart", "Torso"},
    CurrentOption = AimbotConfig.LockPart,
    Callback = function(option)
        AimbotConfig.LockPart = option
    end
})

CombatTab:CreateColorPicker({
    Name = "üíú –¶–≤–µ—Ç FOV",
    Color = AimbotConfig.FOVColor,
    Callback = function(value)
        AimbotConfig.FOVColor = value
    end
})

CombatTab:CreateColorPicker({
    Name = "üî¥ –¶–≤–µ—Ç –∑–∞—Ö–≤–∞—Ç–∞",
    Color = AimbotConfig.LockedColor,
    Callback = function(value)
        AimbotConfig.LockedColor = value
    end
})

--[[
    ==============================
    –ü–û–õ–ù–´–ô ESP –° 3D BOX
    ==============================
]]--
local ESPConfig = {
    Enabled = false,
    TeamCheck = true,
    ShowTeammates = true,
    Boxes = true,
    Names = true,
    Health = true,
    Distance = true,
    Tracers = true,
    TracersForTeammates = false,
    ShowDead = true,
    Box3DEnabled = true,
    Box3DFilled = false,
    UpdateFrequency = 0.05,
    EnemyColor = Color3.fromRGB(255, 50, 50),
    TeammateColor = Color3.fromRGB(50, 255, 50),
    OutlineColor = Color3.fromRGB(255, 255, 255),
    TextColor = Color3.fromRGB(255, 255, 255),
    TracerColor = Color3.fromRGB(255, 50, 255),
    Box3DColor = Color3.fromRGB(0, 255, 0),
    DeadColor = Color3.fromRGB(255, 0, 0),
    TextSize = 14,
    FillTransparency = 0.5,
    TracerThickness = 1,
    Box3DThickness = 1,
    Box3DSize = 2.0
}

local ESPObjects = {}
local TracerLines = {}
local Box3DObjects = {}

-- –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–º–∞–Ω–¥—ã
local function IsTeammate(targetPlayer)
    if not ESPConfig.TeamCheck then return false end
    if not player.Team or not targetPlayer.Team then return false end
    return player.Team == targetPlayer.Team
end

-- –§—É–Ω–∫—Ü–∏—è –æ—á–∏—Å—Ç–∫–∏ ESP
local function ClearPlayerESP(targetPlayer)
    if ESPObjects[targetPlayer] then
        if ESPObjects[targetPlayer].Highlight then
            ESPObjects[targetPlayer].Highlight:Destroy()
        end
        if ESPObjects[targetPlayer].Billboard then
            ESPObjects[targetPlayer].Billboard:Destroy()
        end
        ESPObjects[targetPlayer] = nil
    end

    if TracerLines[targetPlayer] then
        TracerLines[targetPlayer]:Remove()
        TracerLines[targetPlayer] = nil
    end

    if Box3DObjects[targetPlayer] then
        for _, line in ipairs(Box3DObjects[targetPlayer]) do
            if line then
                line:Remove()
            end
        end
        Box3DObjects[targetPlayer] = nil
    end
end

-- –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è ESP —Å 3D –±–æ–∫—Å–∞–º–∏
local function CreatePlayerESP(targetPlayer)
    if targetPlayer == player then return end
    if IsTeammate(targetPlayer) and not ESPConfig.ShowTeammates then return end

    ClearPlayerESP(targetPlayer)
    if not targetPlayer.Character then return end

    local character = targetPlayer.Character
    local humanoid = character:FindFirstChildOfClass("Humanoid")
    local rootPart = character:FindFirstChild("HumanoidRootPart")

    if not rootPart then return end

    local espGroup = {}
    local isTeammate = IsTeammate(targetPlayer)
    local fillColor = isTeammate and ESPConfig.TeammateColor or ESPConfig.EnemyColor

    -- Box ESP
    if ESPConfig.Boxes then
        local highlight = Instance.new("Highlight")
        highlight.FillColor = fillColor
        highlight.OutlineColor = ESPConfig.OutlineColor
        highlight.FillTransparency = ESPConfig.FillTransparency
        highlight.Adornee = character
        highlight.Parent = character
        espGroup.Highlight = highlight
    end

    -- Text Label
    if ESPConfig.Names or ESPConfig.Health or ESPConfig.Distance then
        local billboard = Instance.new("BillboardGui")
        billboard.Name = "ESP_" .. targetPlayer.Name
        billboard.AlwaysOnTop = true
        billboard.ExtentsOffset = Vector3.new(0, 3, 0)
        billboard.Size = UDim2.new(0, 200, 0, 50)
        billboard.Adornee = rootPart
        billboard.Parent = rootPart
        local textLabel = Instance.new("TextLabel")
        textLabel.BackgroundTransparency = 1
        textLabel.Size = UDim2.new(1, 0, 1, 0)
        textLabel.TextColor3 = fillColor
        textLabel.TextSize = ESPConfig.TextSize
        textLabel.Font = Enum.Font.SourceSansBold
        textLabel.TextStrokeTransparency = 0
        textLabel.TextStrokeColor3 = Color3.new(0, 0, 0)
        textLabel.Parent = billboard
        espGroup.Billboard = billboard
        espGroup.TextLabel = textLabel
    end

    -- –¢—Ä–∞—Å—Å–µ—Ä—ã
    if ESPConfig.Tracers and (not isTeammate or ESPConfig.TracersForTeammates) then
        local tracer = Drawing.new("Line")
        tracer.Visible = false
        tracer.Color = isTeammate and ESPConfig.TeammateColor or ESPConfig.TracerColor
        tracer.Thickness = ESPConfig.TracerThickness
        TracerLines[targetPlayer] = tracer
    end

    -- 3D Box ESP
    if ESPConfig.Box3DEnabled then
        local boxLines = {}
        for i = 1, 12 do
            local line = Drawing.new("Line")
            line.Visible = false
            line.Color = ESPConfig.Box3DColor
            line.Thickness = ESPConfig.Box3DThickness
            table.insert(boxLines, line)
        end
        Box3DObjects[targetPlayer] = boxLines
    end

    ESPObjects[targetPlayer] = espGroup

    -- –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
    if character then
        character.AncestryChanged:Connect(function(_, parent)
            if not parent then ClearPlayerESP(targetPlayer) end
        end)
    end

    if humanoid then
        humanoid.Died:Connect(function()
            if not ESPConfig.ShowDead then
                ClearPlayerESP(targetPlayer)
            end
        end)
    end

    targetPlayer.CharacterAdded:Connect(function(newCharacter)
        task.wait(2)
        if ESPConfig.Enabled then
            CreatePlayerESP(targetPlayer)
        end
    end)
end

-- –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ ESP
local function UpdateESPText()
    for targetPlayer, espGroup in pairs(ESPObjects) do
        if espGroup.TextLabel and targetPlayer.Character then
            local character = targetPlayer.Character
            local humanoid = character:FindFirstChildOfClass("Humanoid")
            local rootPart = character:FindFirstChild("HumanoidRootPart")

            if rootPart and espGroup.Billboard and espGroup.Billboard.Parent then
                local isDead = humanoid and humanoid.Health <= 0
                local isTeammate = IsTeammate(targetPlayer)
                local text = ""

                if ESPConfig.Names then
                    text = text .. targetPlayer.Name .. (isDead and " üíÄ" or "") .. "\n"
                end

                if not isDead or ESPConfig.ShowDead then
                    if ESPConfig.Health and humanoid then
                        text = text .. (isDead and "üíÄ –ú–ï–†–¢–í\n" or "‚ù§ " .. math.floor(humanoid.Health) .. "/" .. math.floor(humanoid.MaxHealth) .. "\n")
                    end

                    if ESPConfig.Distance and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                        local localRoot = player.Character.HumanoidRootPart
                        if localRoot then
                            local distance = (localRoot.Position - rootPart.Position).Magnitude
                            text = text .. "üìè " .. math.floor(distance) .. "m"
                        end
                    end
                end

                local fillColor = isTeammate and ESPConfig.TeammateColor or ESPConfig.EnemyColor
                if isDead then
                    espGroup.TextLabel.TextColor3 = ESPConfig.DeadColor
                    if espGroup.Highlight then
                        espGroup.Highlight.FillColor = ESPConfig.DeadColor
                    end
                else
                    espGroup.TextLabel.TextColor3 = fillColor
                    if espGroup.Highlight then
                        espGroup.Highlight.FillColor = fillColor
                    end
                end

                espGroup.TextLabel.Text = text
            end
        end
    end
end

-- –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç—Ä–∞—Å—Å–µ—Ä–æ–≤
local function UpdateTracers()
    if not ESPConfig.Enabled or not ESPConfig.Tracers then return end

    local camera = workspace.CurrentCamera

    for targetPlayer, tracer in pairs(TracerLines) do
        if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
            local humanoid = targetPlayer.Character:FindFirstChildOfClass("Humanoid")
            local rootPart = targetPlayer.Character.HumanoidRootPart
            local isDead = humanoid and humanoid.Health <= 0
            local isTeammate = IsTeammate(targetPlayer)

            if isDead and not ESPConfig.ShowDead then
                tracer.Visible = false
                continue
            end

            local screenPos, onScreen = camera:WorldToViewportPoint(rootPart.Position)

            if onScreen then
                tracer.From = Vector2.new(camera.ViewportSize.X / 2, camera.ViewportSize.Y)
                tracer.To = Vector2.new(screenPos.X, screenPos.Y)
                tracer.Visible = true
                tracer.Color = isTeammate and ESPConfig.TeammateColor or ESPConfig.TracerColor
            else
                tracer.Visible = false
            end
        else
            tracer.Visible = false
        end
    end
end

-- –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è 3D Box ESP
local function UpdateBox3DESP()
    if not ESPConfig.Enabled or not ESPConfig.Box3DEnabled then return end

    local camera = workspace.CurrentCamera

    for targetPlayer, lines in pairs(Box3DObjects) do
        if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
            local humanoid = targetPlayer.Character:FindFirstChildOfClass("Humanoid")
            local rootPart = targetPlayer.Character.HumanoidRootPart
            local head = targetPlayer.Character:FindFirstChild("Head")

            if not humanoid or not rootPart or not head then
                for _, line in ipairs(lines) do
                    line.Visible = false
                end
                continue
            end

            local isDead = humanoid.Health <= 0
            if isDead and not ESPConfig.ShowDead then
                for _, line in ipairs(lines) do
                    line.Visible = false
                end
                continue
            end

            -- –°–æ–∑–¥–∞–µ–º 3D –∫–æ—Ä–æ–±–∫—É –≤–æ–∫—Ä—É–≥ –∏–≥—Ä–æ–∫–∞
            local size = Vector3.new(3, 5, 3) * ESPConfig.Box3DSize
            local corners = {
                rootPart.Position + Vector3.new(-size.X/2, -size.Y/2, -size.Z/2),
                rootPart.Position + Vector3.new(size.X/2, -size.Y/2, -size.Z/2),
                rootPart.Position + Vector3.new(size.X/2, size.Y/2, -size.Z/2),
                rootPart.Position + Vector3.new(-size.X/2, size.Y/2, -size.Z/2),
                rootPart.Position + Vector3.new(-size.X/2, -size.Y/2, size.Z/2),
                rootPart.Position + Vector3.new(size.X/2, -size.Y/2, size.Z/2),
                rootPart.Position + Vector3.new(size.X/2, size.Y/2, size.Z/2),
                rootPart.Position + Vector3.new(-size.X/2, size.Y/2, size.Z/2)
            }

            -- –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —É–≥–ª—ã –≤ 2D –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã
            local screenCorners = {}
            local allVisible = true

            for i, corner in ipairs(corners) do
                local screenPos, visible = camera:WorldToViewportPoint(corner)
                screenCorners[i] = Vector2.new(screenPos.X, screenPos.Y)
                if not visible then allVisible = false end
            end

            if not allVisible then
                for _, line in ipairs(lines) do
                    line.Visible = false
                end
                continue
            end

            -- –†–∏—Å—É–µ–º –ª–∏–Ω–∏–∏ –∫–æ—Ä–æ–±–∫–∏
            local connections = {
                {1, 2}, {2, 3}, {3, 4}, {4, 1}, -- –Ω–∏–∂–Ω–∏–π –∫–≤–∞–¥—Ä–∞—Ç
                {5, 6}, {6, 7}, {7, 8}, {8, 5}, -- –≤–µ—Ä—Ö–Ω–∏–π –∫–≤–∞–¥—Ä–∞—Ç
                {1, 5}, {2, 6}, {3, 7}, {4, 8}  -- –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–µ –ª–∏–Ω–∏–∏
            }

            for i, connection in ipairs(connections) do
                if lines[i] then
                    lines[i].From = screenCorners[connection[1]]
                    lines[i].To = screenCorners[connection[2]]
                    lines[i].Visible = true
                    lines[i].Color = isDead and ESPConfig.DeadColor or ESPConfig.Box3DColor
                    lines[i].Thickness = ESPConfig.Box3DThickness
                end
            end
        else
            for _, line in ipairs(lines) do
                line.Visible = false
            end
        end
    end
end

-- –ü–æ–ª–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ ESP
local function UpdateESP()
    for targetPlayer, _ in pairs(ESPObjects) do
        ClearPlayerESP(targetPlayer)
    end

    if not ESPConfig.Enabled then return end
    for _, targetPlayer in ipairs(Players:GetPlayers()) do
        if targetPlayer ~= player then
            CreatePlayerESP(targetPlayer)
        end
    end
end

-- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è ESP
local function InitializeESPHandlers()
    game.Players.PlayerAdded:Connect(function(targetPlayer)
        if ESPConfig.Enabled then
            task.wait(2)
            CreatePlayerESP(targetPlayer)
        end
    end)

    game.Players.PlayerRemoving:Connect(function(targetPlayer)
        ClearPlayerESP(targetPlayer)
    end)

    for _, targetPlayer in ipairs(Players:GetPlayers()) do
        if targetPlayer ~= player and ESPConfig.Enabled then
            task.wait(0.2)
            CreatePlayerESP(targetPlayer)
        end
    end
end

-- –¶–∏–∫–ª –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è ESP
task.spawn(function()
    while task.wait(ESPConfig.UpdateFrequency) do
        if ESPConfig.Enabled then
            pcall(function()
                UpdateESPText()
                UpdateTracers()
                if ESPConfig.Box3DEnabled then
                    UpdateBox3DESP()
                end
            end)
        end
    end
end)

-- –≠–ª–µ–º–µ–Ω—Ç—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è ESP
ESPTab:CreateToggle({
    Name = "üëÅÔ∏è –í–ö–õ/–í–´–ö–õ ESP",
    CurrentValue = ESPConfig.Enabled,
    Callback = function(value)
        ESPConfig.Enabled = value
        if value then
            InitializeESPHandlers()
            Rayfield:Notify({
                Title = "üëÅÔ∏è ESP –í–ö–õ–Æ–ß–Å–ù",
                Content = "–í—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ ESP –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω—ã",
                Duration = 3
            })
        else
            for targetPlayer, _ in pairs(ESPObjects) do
                ClearPlayerESP(targetPlayer)
            end
            Rayfield:Notify({
                Title = "üëÄ ESP –í–´–ö–õ–Æ–ß–ï–ù",
                Content = "ESP –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω",
                Duration = 2
            })
        end
    end
})

ESPTab:CreateToggle({
    Name = "üë• –ò–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É",
    CurrentValue = ESPConfig.TeamCheck,
    Callback = function(value)
        ESPConfig.TeamCheck = value
        UpdateESP()
    end
})

ESPTab:CreateToggle({
    Name = "üíö –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å —Ç–∏–º–º–µ–π—Ç–æ–≤",
    CurrentValue = ESPConfig.ShowTeammates,
    Callback = function(value)
        ESPConfig.ShowTeammates = value
        UpdateESP()
    end
})

ESPTab:CreateToggle({
    Name = "üü¶ –†–∞–º–∫–∏",
    CurrentValue = ESPConfig.Boxes,
    Callback = function(value)
        ESPConfig.Boxes = value
        UpdateESP()
    end
})

ESPTab:CreateToggle({
    Name = "üìõ –ò–º–µ–Ω–∞",
    CurrentValue = ESPConfig.Names,
    Callback = function(value)
        ESPConfig.Names = value
        UpdateESP()
    end
})

ESPTab:CreateToggle({
    Name = "‚ù§ –ó–¥–æ—Ä–æ–≤—å–µ",
    CurrentValue = ESPConfig.Health,
    Callback = function(value)
        ESPConfig.Health = value
        UpdateESP()
    end
})

ESPTab:CreateToggle({
    Name = "üìè –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ",
    CurrentValue = ESPConfig.Distance,
    Callback = function(value)
        ESPConfig.Distance = value
        UpdateESP()
    end
})

ESPTab:CreateToggle({
    Name = "‚ûñ –¢—Ä–∞—Å—Å–µ—Ä—ã",
    CurrentValue = ESPConfig.Tracers,
    Callback = function(value)
        ESPConfig.Tracers = value
        UpdateESP()
    end
})

ESPTab:CreateToggle({
    Name = "üßµ –¢—Ä–∞—Å—Å–µ—Ä—ã –¥–ª—è —Ç–∏–º–º–µ–π—Ç–æ–≤",
    CurrentValue = ESPConfig.TracersForTeammates,
    Callback = function(value)
        ESPConfig.TracersForTeammates = value
        UpdateESP()
    end
})

ESPTab:CreateToggle({
    Name = "üíÄ –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –º–µ—Ä—Ç–≤—ã—Ö",
    CurrentValue = ESPConfig.ShowDead,
    Callback = function(value)
        ESPConfig.ShowDead = value
        UpdateESP()
    end
})

ESPTab:CreateToggle({
    Name = "üéØ 3D Box ESP",
    CurrentValue = ESPConfig.Box3DEnabled,
    Callback = function(value)
        ESPConfig.Box3DEnabled = value
        if not value then
            for targetPlayer, lines in pairs(Box3DObjects) do
                for _, line in ipairs(lines) do
                    line:Remove()
                end
            end
            Box3DObjects = {}
        else
            UpdateESP()
        end
    end
})

ESPTab:CreateColorPicker({
    Name = "üî¥ –¶–≤–µ—Ç –≤—Ä–∞–≥–æ–≤",
    Color = ESPConfig.EnemyColor,
    Callback = function(value)
        ESPConfig.EnemyColor = value
        UpdateESP()
    end
})

ESPTab:CreateColorPicker({
    Name = "üíö –¶–≤–µ—Ç —Ç–∏–º–º–µ–π—Ç–æ–≤",
    Color = ESPConfig.TeammateColor,
    Callback = function(value)
        ESPConfig.TeammateColor = value
        UpdateESP()
    end
})

ESPTab:CreateColorPicker({
    Name = "üíÄ –¶–≤–µ—Ç –º–µ—Ä—Ç–≤—ã—Ö",
    Color = ESPConfig.DeadColor,
    Callback = function(value)
        ESPConfig.DeadColor = value
        UpdateESP()
    end
})

ESPTab:CreateColorPicker({
    Name = "üéØ –¶–≤–µ—Ç 3D Box",
    Color = ESPConfig.Box3DColor,
    Callback = function(value)
        ESPConfig.Box3DColor = value
        for targetPlayer, lines in pairs(Box3DObjects) do
            for _, line in ipairs(lines) do
                line.Color = value
            end
        end
    end
})

ESPTab:CreateSlider({
    Name = "üî¢ –†–∞–∑–º–µ—Ä —Ç–µ–∫—Å—Ç–∞",
    Range = {8, 24},
    Increment = 1,
    Suffix = "px",
    CurrentValue = ESPConfig.TextSize,
    Callback = function(value)
        ESPConfig.TextSize = value
        UpdateESP()
    end
})

ESPTab:CreateSlider({
    Name = "üå´Ô∏è –ü—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å",
    Range = {0, 1},
    Increment = 0.1,
    CurrentValue = ESPConfig.FillTransparency,
    Callback = function(value)
        ESPConfig.FillTransparency = value
        UpdateESP()
    end
})

ESPTab:CreateSlider({
    Name = "üìè –¢–æ–ª—â–∏–Ω–∞ –ª–∏–Ω–∏–π",
    Range = {1, 5},
    Increment = 1,
    CurrentValue = ESPConfig.TracerThickness,
    Callback = function(value)
        ESPConfig.TracerThickness = value
        UpdateESP()
    end
})

ESPTab:CreateSlider({
    Name = "üéØ –¢–æ–ª—â–∏–Ω–∞ 3D Box",
    Range = {1, 5},
    Increment = 1,
    CurrentValue = ESPConfig.Box3DThickness,
    Callback = function(value)
        ESPConfig.Box3DThickness = value
        for targetPlayer, lines in pairs(Box3DObjects) do
            for _, line in ipairs(lines) do
                line.Thickness = value
            end
        end
    end
})

ESPTab:CreateSlider({
    Name = "üìê –†–∞–∑–º–µ—Ä 3D Box",
    Range = {0.5, 5.0},
    Increment = 0.1,
    Suffix = "x",
    CurrentValue = ESPConfig.Box3DSize,
    Callback = function(value)
        ESPConfig.Box3DSize = value
    end
})

ESPTab:CreateSlider({
    Name = "‚ö° –ß–∞—Å—Ç–æ—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è ESP",
    Range = {0.02, 0.1},
    Increment = 0.01,
    Suffix = "—Å–µ–∫",
    CurrentValue = ESPConfig.UpdateFrequency,
    Callback = function(value)
        ESPConfig.UpdateFrequency = value
    end
})

--[[
    ==============================
    –ù–û–í–´–ô –¢–ï–õ–ï–ü–û–†–¢-–°–ö–†–ò–ü–¢
    ==============================
]]--
local LocalPlayer = Players.LocalPlayer
local dropdown = nil
local selectedPlayer = nil
local autoTp = false
local onlineLabel = nil

-- –§—É–Ω–∫—Ü–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–π —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏–∏
local function TeleportToPlayer(targetPlayer)
    if not targetPlayer or not targetPlayer:IsA("Player") then
        Rayfield:Notify({ Title = "‚ùå –û—à–∏–±–∫–∞", Content = "–ù–µ–≤–µ—Ä–Ω—ã–π –∏–≥—Ä–æ–∫", Duration = 2 })
        return
    end
    local myChar = LocalPlayer.Character
    local targetChar = targetPlayer.Character
    if myChar and targetChar then
        local myRoot = myChar:FindFirstChild("HumanoidRootPart")
        local targetRoot = targetChar:FindFirstChild("HumanoidRootPart")
        if myRoot and targetRoot then
            myRoot.CFrame = targetRoot.CFrame
            Rayfield:Notify({ Title = "‚úÖ –£—Å–ø–µ—Ö", Content = "–¢–µ–ª–µ–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω –∫ " .. targetPlayer.Name, Duration = 2 })
        end
    end
end

-- –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—á—ë—Ç—á–∏–∫–∞
local function UpdateOnlineCount()
    if onlineLabel then
        onlineLabel:Set("üë• –ò–≥—Ä–æ–∫–æ–≤ –æ–Ω–ª–∞–π–Ω: " .. tostring(#Players:GetPlayers()))
    end
end

-- –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∏–≥—Ä–æ–∫–æ–≤ –±–µ–∑ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏—è Dropdown
local function UpdateDropdown()
    if not dropdown then return end
    local opts = {}
    for _, p in pairs(Players:GetPlayers()) do
        if p ~= LocalPlayer then
            table.insert(opts, p.Name)
        end
    end
    table.sort(opts)
    dropdown:Refresh(opts) -- –æ–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –±–µ–∑ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏—è
    UpdateOnlineCount()
    -- –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –∏–≥—Ä–æ–∫ –≤—ã—à–µ–ª, —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—ã–±–æ—Ä
    if selectedPlayer and not Players:FindFirstChild(selectedPlayer.Name) then
        selectedPlayer = nil
        dropdown:Set("") -- —Å–±—Ä–æ—Å
        autoTp = false
        Rayfield:Notify({
            Title = "‚ÑπÔ∏è –ò–≥—Ä–æ–∫ –≤—ã—à–µ–ª",
            Content = "–í—ã–±–æ—Ä —Å–±—Ä–æ—à–µ–Ω",
            Duration = 2
        })
    end
end

-- UI
TeleportTab:CreateSection("–ò–≥—Ä–æ–∫–∏")
onlineLabel = TeleportTab:CreateLabel("üë• –ò–≥—Ä–æ–∫–æ–≤ –æ–Ω–ª–∞–π–Ω: 0")
dropdown = TeleportTab:CreateDropdown({
    Name = "–í—ã–±–µ—Ä–∏—Ç–µ –∏–≥—Ä–æ–∫–∞",
    Options = {},
    CurrentOption = "",
    Callback = function(option)
        local chosen = option
        if typeof(option) == "table" then
            chosen = option[1]
        end
        selectedPlayer = nil
        for _, pl in ipairs(Players:GetPlayers()) do
            if pl.Name == chosen then
                selectedPlayer = pl
                break
            end
        end
        if selectedPlayer then
            Rayfield:Notify({
                Title = "–í—ã–±—Ä–∞–Ω –∏–≥—Ä–æ–∫",
                Content = selectedPlayer.Name,
                Duration = 1.5
            })
        end
    end
})

TeleportTab:CreateButton({
    Name = "üöÄ –¢–µ–ª–µ–ø–æ—Ä—Ç –∫ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É",
    Callback = function()
        if not selectedPlayer then
            Rayfield:Notify({ Title = "‚ùó –í–Ω–∏–º–∞–Ω–∏–µ", Content = "–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –∏–≥—Ä–æ–∫–∞", Duration = 2 })
            return
        end
        TeleportToPlayer(selectedPlayer)
    end
})

TeleportTab:CreateToggle({
    Name = "‚ö° –ê–≤—Ç–æ-—Ç–µ–ª–µ–ø–æ—Ä—Ç",
    CurrentValue = false,
    Callback = function(value)
        autoTp = value
        if value and selectedPlayer then
            Rayfield:Notify({ Title = "‚ö° –ê–≤—Ç–æ-–¢–ü –í–ö–õ", Content = "–°–ª–µ–∂–µ–Ω–∏–µ –∑–∞ " .. selectedPlayer.Name, Duration = 2 })
        elseif not value then
            Rayfield:Notify({ Title = "‚ö° –ê–≤—Ç–æ-–¢–ü –í–´–ö–õ", Content = "–û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ", Duration = 2 })
        end
    end
})

-- –ê–≤—Ç–æ-–¢–ü
task.spawn(function()
    while true do
        task.wait(0.12)
        if autoTp and selectedPlayer and Players:FindFirstChild(selectedPlayer.Name) then
            local myChar = LocalPlayer.Character
            local targetChar = selectedPlayer.Character
            if myChar and targetChar then
                local myRoot = myChar:FindFirstChild("HumanoidRootPart")
                local targetRoot = targetChar:FindFirstChild("HumanoidRootPart")
                if myRoot and targetRoot then
                    myRoot.CFrame = targetRoot.CFrame
                end
            end
        end
    end
end)

-- –ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∏–≥—Ä–æ–∫–æ–≤ –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥
task.spawn(function()
    while true do
        task.wait(5)
        UpdateDropdown()
    end
end)

-- –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–∏ –≤—Ö–æ–¥–µ/–≤—ã—Ö–æ–¥–µ –∏–≥—Ä–æ–∫–æ–≤
Players.PlayerAdded:Connect(UpdateDropdown)
Players.PlayerRemoving:Connect(UpdateDropdown)

-- –ü–µ—Ä–≤–∏—á–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
task.delay(1, UpdateDropdown)
Rayfield:Notify({
    Title = "‚úÖ –ì–æ—Ç–æ–≤–æ",
    Content = "–°–∫—Ä–∏–ø—Ç —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞ –∑–∞–ø—É—â–µ–Ω. –°–ø–∏—Å–æ–∫ –∏–≥—Ä–æ–∫–æ–≤ –∏ —Å—á—ë—Ç—á–∏–∫ –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.",
    Duration = 4
})

--[[
    ==============================
    –†–ê–ó–î–ï–õ –£–ë–ò–¢–¨ –í–°–ï–•
    ==============================
]]--
local KillAllSection = KillAllTab:CreateSection("‚öîÔ∏è –£–ë–ò–¢–¨ –í–°–ï–• –í–†–ê–ì–û–í")
local safeZoneRadius = 20
local isActive = false
local killAllEnabled = true
local ignoreTeam = true
local zonePart = Instance.new("Part")
zonePart.Shape = Enum.PartType.Ball
zonePart.Anchored = true
zonePart.CanCollide = false
zonePart.Transparency = 0.7
zonePart.Color = Color3.fromRGB(0, 255, 0)
zonePart.Material = Enum.Material.Neon
zonePart.Name = "SafeZone"
zonePart.Parent = workspace

KillAllTab:CreateToggle({
   Name = "üõ°Ô∏è –í–∫–ª—é—á–∏—Ç—å Safe Zone",
   CurrentValue = isActive,
   Callback = function(Value)
      isActive = Value
   end,
})

KillAllTab:CreateToggle({
   Name = "‚öîÔ∏è –†–µ–∂–∏–º Kill All",
   CurrentValue = killAllEnabled,
   Callback = function(Value)
      killAllEnabled = Value
   end,
})

KillAllTab:CreateToggle({
   Name = "üë• –ò–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É",
   CurrentValue = ignoreTeam,
   Callback = function(Value)
      ignoreTeam = Value
   end,
})

KillAllTab:CreateSlider({
   Name = "üìè –†–∞–¥–∏—É—Å –±–µ–∑–æ–ø–∞—Å–Ω–æ–π –∑–æ–Ω—ã",
   Range = {5, 100},
   Increment = 1,
   Suffix = "studs",
   CurrentValue = safeZoneRadius,
   Callback = function(Value)
      safeZoneRadius = Value
   end,
})

-- –¶–∏–∫–ª Kill All
task.spawn(function()
    while task.wait(0.1) do
        local myChar = player.Character
        if not myChar or not myChar:FindFirstChild("HumanoidRootPart") then continue end

        local root = myChar.HumanoidRootPart
        zonePart.Position = root.Position
        zonePart.Size = Vector3.new(safeZoneRadius * 2, safeZoneRadius * 2, safeZoneRadius * 2)

        if not isActive then
            zonePart.Transparency = 1
            continue
        else
            zonePart.Transparency = 0.7
        end

        local tool = myChar:FindFirstChildOfClass("Tool")
        if not tool or not tool:FindFirstChild("Handle") then continue end

        for _, other in ipairs(Players:GetPlayers()) do
            if other ~= player and other.Character and other.Character:FindFirstChild("HumanoidRootPart") then
                if ignoreTeam and player.Team and other.Team and player.Team == other.Team then
                    continue
                end

                local oRoot = other.Character.HumanoidRootPart
                local dist = (oRoot.Position - root.Position).Magnitude

                local shouldAttack = killAllEnabled or (dist > safeZoneRadius)

                if shouldAttack and dist <= 100 then
                    tool:Activate()
                    for _, part in pairs(other.Character:GetChildren()) do
                        if part:IsA("BasePart") then
                            firetouchinterest(tool.Handle, part, 0)
                            firetouchinterest(tool.Handle, part, 1)
                        end
                    end
                end
            end
        end
    end
end)

--[[
    ==============================
    –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –°–ö–†–ò–ü–¢–´
    ==============================
]]--
local ScriptsSection = MainTab:CreateSection("üìú –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –°–ö–†–ò–ü–¢–´")
local scriptUrls = {
    "https://pastefy.app/YsJgITXR/raw",
    "https://pastebin.com/raw/3Rnd9rHf",
    "https://glot.io/snippets/gua2ntmbdm/raw/main.lua",
    "https://pastefy.app/JOWniO6o/raw",
    "https://pastebin.com/raw/LgZwZ7ZB",
    "https://pastefy.app/w7KnPY70/raw",
    "https://raw.githubusercontent.com/GenesisFE/Genesis/main/Obfuscations/Gale%20Fighter",
    "https://raw.githubusercontent.com/GenesisFE/Genesis/main/Obfuscations/Neptunian%20V"
}
local scriptNames = {
    "üëπ SCP-096 –†–µ–∂–∏–º",
    "üëª –ù–µ–≤–∏–¥–∏–º–æ—Å—Ç—å PRO",
    "üõ°Ô∏è –ë–æ–≥-—Ä–µ–∂–∏–º+",
    "üßü –ó–æ–º–±–∏ —Ö–∞–∫–∏",
    "üèéÔ∏è —Ñ–ª–∏–Ω–≥+",
    "üßü –ü—Ä–æ—Å—Ç–æ–π –∑–æ–º–±–∏-–Ω–∞–ø–∞—Ä–Ω–∏–∫",
    "‚öîÔ∏è FE GALE FIGHTER",
    "üåä FE Neptunian V"
}

for i = 1, #scriptNames do
    MainTab:CreateButton({
        Name = scriptNames[i],
        Callback = function()
            Rayfield:Notify({
                Title = "‚è≥ –ó–∞–≥—Ä—É–∑–∫–∞...",
                Content = "üì• "..scriptNames[i].." –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è",
                Duration = 3
            })

            local success, err = pcall(function()
                loadstring(game:HttpGet(scriptUrls[i], true))()
            end)

            if not success then
                Rayfield:Notify({
                    Title = "‚ùå –û—à–∏–±–∫–∞!",
                    Content = "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å:\n"..tostring(err),
                    Duration = 6
                })
            end
        end
    })
end

--[[
    ==============================
    –û–°–ù–û–í–ù–´–ï –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò
    ==============================
]]--
game:GetService("RunService").Stepped:Connect(function()
    if noclipActive and player.Character then
        for _, part in ipairs(player.Character:GetDescendants()) do
            if part:IsA("BasePart") then
                part.CanCollide = false
            end
        end
    end
end)

game:GetService("RunService").Heartbeat:Connect(function()
    if flyActive and flyVelocity and player.Character then
        local root = player.Character:FindFirstChild("HumanoidRootPart")
        if not root then return end

        local input = game:GetService("UserInputService")
        local newVelocity = Vector3.new(0, 0, 0)

        if input:IsKeyDown(Enum.KeyCode.W) then newVelocity = root.CFrame.LookVector * 50 end
        if input:IsKeyDown(Enum.KeyCode.S) then newVelocity = root.CFrame.LookVector * -50 end
        if input:IsKeyDown(Enum.KeyCode.A) then newVelocity = newVelocity - (root.CFrame.RightVector * 50) end
        if input:IsKeyDown(Enum.KeyCode.D) then newVelocity = newVelocity + (root.CFrame.RightVector * 50) end
        if input:IsKeyDown(Enum.KeyCode.Space) then newVelocity = newVelocity + Vector3.new(0, 50, 0) end
        if input:IsKeyDown(Enum.KeyCode.LeftShift) then newVelocity = newVelocity - Vector3.new(0, 50, 0) end

        if flyVelocity then
            flyVelocity.Velocity = newVelocity
        end
    end
end)

player.CharacterAdded:Connect(function(character)
    if flyActive then
        task.wait(1)
        ToggleFlight()
        ToggleFlight()
    end

    if ESPConfig.Enabled then
        task.wait(2)
        UpdateESP()
    end
end)

-- –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞–≥—Ä—É–∑–∫–µ
Rayfield:Notify({
    Title = "üíú ELITE HUB v8.2 ULTRA –ó–ê–ì–†–£–ñ–ï–ù!",
    Content = "Game Hub + –í—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –≤–∫–ª—é—á–µ–Ω—ã | Kill All + –î–æ–ø.—Å–∫—Ä–∏–ø—Ç—ã",
    Duration = 6,
    Image = 7733960981
})

print("üåü ELITE HUB v8.2 ULTRA —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω!")
